<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GModule" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gtk" version="3.0"/>
  <namespace name="Talkatu"
             version="0.0"
             shared-library="libtalkatu.so.0"
             c:identifier-prefixes="Talkatu"
             c:symbol-prefixes="talkatu">
    <constant name="ACTION_ATTACH_FILE"
              value="attach-file"
              c:type="TALKATU_ACTION_ATTACH_FILE">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="104">A constant that represents the attach file action.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ACTION_FORMAT_BOLD"
              value="format-bold"
              c:type="TALKATU_ACTION_FORMAT_BOLD">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="62">A constant that represents the bold font style action.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="31"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ACTION_FORMAT_GROW"
              value="format-grow"
              c:type="TALKATU_ACTION_FORMAT_GROW">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="86">A constant that represents the increase font size action.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ACTION_FORMAT_ITALIC"
              value="format-italic"
              c:type="TALKATU_ACTION_FORMAT_ITALIC">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="68">A constant that represents the italic font style action.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="32"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ACTION_FORMAT_RESET"
              value="format-reset"
              c:type="TALKATU_ACTION_FORMAT_RESET">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="98">A constant that represents the reset all formatting action.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ACTION_FORMAT_SHRINK"
              value="format-shrink"
              c:type="TALKATU_ACTION_FORMAT_SHRINK">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="92">A constant that represents the decrease font size action.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ACTION_FORMAT_STRIKETHROUGH"
              value="format-strikethrough"
              c:type="TALKATU_ACTION_FORMAT_STRIKETHROUGH">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="80">A constant that represents the strike through font style action.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ACTION_FORMAT_UNDERLINE"
              value="format-underline"
              c:type="TALKATU_ACTION_FORMAT_UNDERLINE">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="74">A constant that represents the underline font style action.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="33"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ACTION_INSERT_LINK"
              value="insert-link"
              c:type="TALKATU_ACTION_INSERT_LINK">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="110">A constant that presents the action to activate when the user wants to
insert a link.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="ActionGroup"
           c:symbol-prefix="action_group"
           c:type="TalkatuActionGroup"
           parent="Gio.SimpleActionGroup"
           glib:type-name="TalkatuActionGroup"
           glib:get-type="talkatu_action_group_get_type"
           glib:type-struct="ActionGroupClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="31">A lot of Talkatu's user interaction is handled by #GAction's.  These
functions help make that easier.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="58"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <constructor name="new" c:identifier="talkatu_action_group_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatuactiongroup.c"
             line="708">Creates a new #TalkatuActionGroup bound to @buffer.</doc>
        <source-position filename="talkatu/talkatuactiongroup.h" line="60"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuactiongroup.c"
               line="714">The new #TalkatuActionGroup instance.</doc>
          <type name="Gio.SimpleActionGroup" c:type="GSimpleActionGroup*"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="710">The #GtkTextBuffer to bind this action group to.</doc>
            <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="action_activated">
        <source-position filename="talkatu/talkatuactiongroup.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ag" transfer-ownership="none">
            <type name="ActionGroup" c:type="TalkatuActionGroup*"/>
          </instance-parameter>
          <parameter name="action" transfer-ownership="none">
            <type name="Gio.Action" c:type="GAction*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="activate_format"
              c:identifier="talkatu_action_group_activate_format">
        <doc xml:space="preserve"
             filename="talkatu/talkatuactiongroup.c"
             line="829">Activates action named @format_name.  This will apply it to a selection if
there is one.</doc>
        <source-position filename="talkatu/talkatuactiongroup.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="831">The #TalkatuActionGroup instance.</doc>
            <type name="ActionGroup" c:type="TalkatuActionGroup*"/>
          </instance-parameter>
          <parameter name="format_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="832">The name of the format to activate.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_action"
              c:identifier="talkatu_action_group_enable_action">
        <doc xml:space="preserve"
             filename="talkatu/talkatuactiongroup.c"
             line="783">By default a #TalkatuActionGroup's actions are all disabled.  To enable them
you must call this function one at time.</doc>
        <source-position filename="talkatu/talkatuactiongroup.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="785">The #TalkatuActionGroup instance.</doc>
            <type name="ActionGroup" c:type="TalkatuActionGroup*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="786">The name of the action to enable.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_action_activated"
              c:identifier="talkatu_action_group_get_action_activated">
        <doc xml:space="preserve"
             filename="talkatu/talkatuactiongroup.c"
             line="849">Returns that state of the action named @name.  If @name doesn't exist or is
not a toggle action, FALSE is returned.</doc>
        <source-position filename="talkatu/talkatuactiongroup.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuactiongroup.c"
               line="857">Whether or not @name is toggled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="ag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="851">The #TalkatuActionGroup instance.</doc>
            <type name="ActionGroup" c:type="TalkatuActionGroup*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="852">The name of the action to check.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_activated_formats"
              c:identifier="talkatu_action_group_get_activated_formats">
        <doc xml:space="preserve"
             filename="talkatu/talkatuactiongroup.c"
             line="889">Returns an array of all actions that are activated.  This values must be
free'd with g_strfreev.</doc>
        <source-position filename="talkatu/talkatuactiongroup.h" line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuactiongroup.c"
               line="896">A list of actions that are activated.</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="ag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="891">The #TalkatuActionGroup instance.</doc>
            <type name="ActionGroup" c:type="TalkatuActionGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_buffer" c:identifier="talkatu_action_group_get_buffer">
        <doc xml:space="preserve"
             filename="talkatu/talkatuactiongroup.c"
             line="725">#TalkatuActionGroup's are bound to a specific #GtkTextBuffer.  This function
return the one that @ag is bound to.</doc>
        <source-position filename="talkatu/talkatuactiongroup.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuactiongroup.c"
               line="732">The #GtkTextBuffer that @ag is bound to.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="727">The #TalkatuActionGroup instance.</doc>
            <type name="ActionGroup" c:type="TalkatuActionGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_input" c:identifier="talkatu_action_group_get_input">
        <doc xml:space="preserve"
             filename="talkatu/talkatuactiongroup.c"
             line="764">Gets the #TalkatuInput bound to @ag.</doc>
        <source-position filename="talkatu/talkatuactiongroup.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuactiongroup.c"
               line="770">The #TalkatuInput that @ag is bound to.</doc>
          <type name="Input" c:type="TalkatuInput*"/>
        </return-value>
        <parameters>
          <instance-parameter name="ag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="766">The #TalkatuActionGroup instance.</doc>
            <type name="ActionGroup" c:type="TalkatuActionGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_input" c:identifier="talkatu_action_group_set_input">
        <doc xml:space="preserve"
             filename="talkatu/talkatuactiongroup.c"
             line="745">Binds @ag to @input for actions that need to work against the input widget.</doc>
        <source-position filename="talkatu/talkatuactiongroup.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="747">The #TalkatuActionGroup instance.</doc>
            <type name="ActionGroup" c:type="TalkatuActionGroup*"/>
          </instance-parameter>
          <parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="748">A #TalkatuInput instance or %NULL.</doc>
            <type name="Input" c:type="TalkatuInput*"/>
          </parameter>
        </parameters>
      </method>
      <property name="buffer"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Buffer"/>
      </property>
      <property name="input"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="Input"/>
      </property>
      <field name="parent_instance">
        <type name="Gio.SimpleActionGroup" c:type="GSimpleActionGroup"/>
      </field>
      <glib:signal name="action-activated" when="last" action="1">
        <doc xml:space="preserve"
             filename="talkatu/talkatuactiongroup.c"
             line="679">Emitted when one of the actions in @talkatuactiongroup are activated.
This is a convenience signal so people don't have to connect to every
action themselves.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="682">The #GAction that was activated.</doc>
            <type name="Gio.Action"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuactiongroup.c"
                 line="683">User supplied data.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ActionGroupClass"
            c:type="TalkatuActionGroupClass"
            glib:is-gtype-struct-for="ActionGroup">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="54">The backing class of a #TalkatuActionGroup.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="58"/>
      <field name="parent" readable="0" private="1">
        <type name="Gio.SimpleActionGroupClass"
              c:type="GSimpleActionGroupClass"/>
      </field>
      <field name="action_activated">
        <callback name="action_activated">
          <source-position filename="talkatu/talkatuactiongroup.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="ag" transfer-ownership="none">
              <type name="ActionGroup" c:type="TalkatuActionGroup*"/>
            </parameter>
            <parameter name="action" transfer-ownership="none">
              <type name="Gio.Action" c:type="GAction*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <interface name="Attachment"
               c:symbol-prefix="attachment"
               c:type="TalkatuAttachment"
               glib:type-name="TalkatuAttachment"
               glib:get-type="talkatu_attachment_get_type"
               glib:type-struct="AttachmentInterface">
      <doc xml:space="preserve"
           filename="talkatu/talkatuattachment.c"
           line="23">Attachments can be images, files, etc that can be attached to a
#TalkatuMessage.</doc>
      <source-position filename="talkatu/talkatuattachment.h" line="43"/>
      <virtual-method name="get_hash_key" invoker="get_hash_key">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="182">Gets the hash key of @attachment.  This should only be used when
trying to address a #TalkatuAttachment in a #GHashTable that is using
g_int64_hash() as the key function.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="190">The hash key of @attachment.</doc>
          <type name="guint64" c:type="guint64*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="184">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_content_type"
              c:identifier="talkatu_attachment_get_content_type">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="217">Returns the content type of the attachment.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="223">The content type of @attachment.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="219">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename"
              c:identifier="talkatu_attachment_get_filename">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="339">Gets the base filename for @attachment.  Remote URI will be checked before
local URI, but the basename of one of those is what will be returned.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="62"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="346">The filename for @attachment.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="341">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hash_key"
              c:identifier="talkatu_attachment_get_hash_key">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="182">Gets the hash key of @attachment.  This should only be used when
trying to address a #TalkatuAttachment in a #GHashTable that is using
g_int64_hash() as the key function.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="190">The hash key of @attachment.</doc>
          <type name="guint64" c:type="guint64*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="184">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id" c:identifier="talkatu_attachment_get_id">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="163">Gets the ID associated with @attachment.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="169">The ID of @attachment.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="165">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_local_uri"
              c:identifier="talkatu_attachment_get_local_uri">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="236">Gets the local URI if any for @attachment.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="242">The local URI for @attachment.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="238">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_preview" c:identifier="talkatu_attachment_get_preview">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="375">Create a #GIcon as a preview for @attachment.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="381">A preview image of @attachment.</doc>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="377">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_remote_uri"
              c:identifier="talkatu_attachment_get_remote_uri">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="271">Gets the remote URI if any for @attachment.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="56"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="277">The remote URI for @attachment.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="273">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size" c:identifier="talkatu_attachment_get_size">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="306">Gets the size of @attachment.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="312">The size of @attachment.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="308">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_id" c:identifier="talkatu_attachment_set_id">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="203">Sets the ID of @attachment to @id.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="205">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="206">The new ID for @attachment.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_local_uri"
              c:identifier="talkatu_attachment_set_local_uri">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="255">Sets the local URI of @attachment.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="257">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
          <parameter name="local_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="258">The new local URI.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_remote_uri"
              c:identifier="talkatu_attachment_set_remote_uri">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="290">Sets the remote URI of @attachment.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="292">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
          <parameter name="remote_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="293">The new remote URI.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="talkatu_attachment_set_size">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachment.c"
             line="325">Sets the size of @attachment to @size.</doc>
        <source-position filename="talkatu/talkatuattachment.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="327">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="328">The new size of @attachment.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="content-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id" writable="1" construct="1" transfer-ownership="none">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="local-uri"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="remote-uri"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="size"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="guint64" c:type="guint64"/>
      </property>
    </interface>
    <class name="AttachmentDialog"
           c:symbol-prefix="attachment_dialog"
           c:type="TalkatuAttachmentDialog"
           parent="Gtk.Dialog"
           glib:type-name="TalkatuAttachmentDialog"
           glib:get-type="talkatu_attachment_dialog_get_type"
           glib:type-struct="AttachmentDialogClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuattachmentdialog.c"
           line="23">A #GtkDialog that allows the user to customize attachments for a message.</doc>
      <source-position filename="talkatu/talkatuattachmentdialog.h" line="36"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="talkatu_attachment_dialog_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachmentdialog.c"
             line="195">Creates a new #TalkatuAttachmentDialog with the given attachment and comment.</doc>
        <source-position filename="talkatu/talkatuattachmentdialog.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachmentdialog.c"
               line="202">The new #TalkatuAttachmentDialog.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachmentdialog.c"
                 line="197">The #TalkatuAttachment we're customizing.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </parameter>
          <parameter name="comment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachmentdialog.c"
                 line="198">A default comment to display.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_attachment"
              c:identifier="talkatu_attachment_dialog_get_attachment">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachmentdialog.c"
             line="216">Gets the #TalkatuAttachment from @dialog.</doc>
        <source-position filename="talkatu/talkatuattachmentdialog.h"
                         line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachmentdialog.c"
               line="222">The #TalkatuAttachment for the file that the user
         selected.</doc>
          <type name="Attachment" c:type="TalkatuAttachment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachmentdialog.c"
                 line="218">The #TalkatuAttachmentDialog.</doc>
            <type name="AttachmentDialog" c:type="TalkatuAttachmentDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_comment"
              c:identifier="talkatu_attachment_dialog_get_comment">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachmentdialog.c"
             line="232">Get the comment the user entered, or empty string if nothing was entered.</doc>
        <source-position filename="talkatu/talkatuattachmentdialog.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachmentdialog.c"
               line="238">The comment that the user entered.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachmentdialog.c"
                 line="234">The #TalkatuAttachmentDialog.</doc>
            <type name="AttachmentDialog" c:type="TalkatuAttachmentDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="attachment"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GObject.Object"/>
      </property>
      <property name="comment"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="AttachmentDialogClass"
            c:type="TalkatuAttachmentDialogClass"
            glib:is-gtype-struct-for="AttachmentDialog">
      <source-position filename="talkatu/talkatuattachmentdialog.h" line="36"/>
      <field name="parent_class">
        <type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
      </field>
    </record>
    <callback name="AttachmentForeachFunc"
              c:type="TalkatuAttachmentForeachFunc">
      <doc xml:space="preserve"
           filename="talkatu/talkatuattachment.c"
           line="59">#TalkatuAttachmentForeachFunc is a callback function called against each
#TalkatuAttachment in a collection.</doc>
      <source-position filename="talkatu/talkatuattachment.h" line="45"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="attachment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="61">A #TalkatuAttachment instance.</doc>
          <type name="Attachment" c:type="TalkatuAttachment*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachment.c"
               line="62">Caller supplied data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="AttachmentInterface"
            c:type="TalkatuAttachmentInterface"
            glib:is-gtype-struct-for="Attachment">
      <doc xml:space="preserve"
           filename="talkatu/talkatuattachment.c"
           line="46">#TalkatuAttachmentInterface defines the methods and behaviors that make up a
#TalkatuAttachment.  This was made an interface so clients can represent
their data however they want but still provide a common interface for Talkatu
to work with.</doc>
      <source-position filename="talkatu/talkatuattachment.h" line="43"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_hash_key">
        <callback name="get_hash_key">
          <source-position filename="talkatu/talkatuattachment.h" line="39"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachment.c"
                 line="190">The hash key of @attachment.</doc>
            <type name="guint64" c:type="guint64*"/>
          </return-value>
          <parameters>
            <parameter name="attachment" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatuattachment.c"
                   line="184">The #TalkatuAttachment instance.</doc>
              <type name="Attachment" c:type="TalkatuAttachment*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="AttachmentPreview"
           c:symbol-prefix="attachment_preview"
           c:type="TalkatuAttachmentPreview"
           parent="Gtk.InfoBar"
           glib:type-name="TalkatuAttachmentPreview"
           glib:get-type="talkatu_attachment_preview_get_type"
           glib:type-struct="AttachmentPreviewClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuattachmentpreview.c"
           line="23">A simple widget that displays a preview of a #TalkatuAttachment.</doc>
      <source-position filename="talkatu/talkatuattachmentpreview.h"
                       line="36"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="talkatu_attachment_preview_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachmentpreview.c"
             line="186">Creates a new #TalkatuAttachmentPreview for the given attachment.</doc>
        <source-position filename="talkatu/talkatuattachmentpreview.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachmentpreview.c"
               line="192">The new #TalkatuAttachmentPreview.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachmentpreview.c"
                 line="188">The #TalkatuAttachment we're previewing.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_attachment"
              c:identifier="talkatu_attachment_preview_get_attachment">
        <doc xml:space="preserve"
             filename="talkatu/talkatuattachmentpreview.c"
             line="205">Gets the #TalkatuAttachment from @preview.</doc>
        <source-position filename="talkatu/talkatuattachmentpreview.h"
                         line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuattachmentpreview.c"
               line="211">The #TalkatuAttachment from @preview.</doc>
          <type name="Attachment" c:type="TalkatuAttachment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuattachmentpreview.c"
                 line="207">The #TalkatuAttachmentPreview.</doc>
            <type name="AttachmentPreview" c:type="TalkatuAttachmentPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="attachment"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GObject.Object"/>
      </property>
    </class>
    <record name="AttachmentPreviewClass"
            c:type="TalkatuAttachmentPreviewClass"
            glib:is-gtype-struct-for="AttachmentPreview">
      <source-position filename="talkatu/talkatuattachmentpreview.h"
                       line="36"/>
      <field name="parent_class">
        <type name="Gtk.InfoBarClass" c:type="GtkInfoBarClass"/>
      </field>
    </record>
    <constant name="BUFFER_LINK_TARGET_ATTRIBUTE"
              value="talkatu_link_target"
              c:type="TALKATU_BUFFER_LINK_TARGET_ATTRIBUTE">
      <doc xml:space="preserve"
           filename="talkatu/talkatubuffer.c"
           line="62">The name of the attribute set on #GtkTextTags that contain the URL for
links.</doc>
      <source-position filename="talkatu/talkatubuffer.h" line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Buffer"
           c:symbol-prefix="buffer"
           c:type="TalkatuBuffer"
           parent="Gtk.TextBuffer"
           glib:type-name="TalkatuBuffer"
           glib:get-type="talkatu_buffer_get_type"
           glib:type-struct="BufferClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatubuffer.c"
           line="28">Talkatu implements a couple of different types of text buffers.  This API
tries to abstract the commonalities between them and make it easier to
create text buffers for additional markup types.</doc>
      <source-position filename="talkatu/talkatubuffer.h" line="53"/>
      <constructor name="new" c:identifier="talkatu_buffer_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="435">This is a simple #GtkTextBuffer subclass that contains the shared behavior
for the other Talkatu text buffers.</doc>
        <source-position filename="talkatu/talkatubuffer.h" line="55"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatubuffer.c"
               line="442">The #TalkatuBuffer instance.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="action_group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="437">An optional #GSimpleAction group to use.</doc>
            <type name="Gio.SimpleActionGroup" c:type="GSimpleActionGroup*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="create_action_group" introspectable="0">
        <source-position filename="talkatu/talkatubuffer.h" line="49"/>
        <return-value>
          <type name="Gio.SimpleActionGroup" c:type="GSimpleActionGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="TalkatuBuffer*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="insert_markup" invoker="insert_markup">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="506">Inserts text that will be or already is marked up.  Calling this tells
@buffer to not apply the currently selected format to the newly inserted
text, which is what it does when text is normally inserted.</doc>
        <source-position filename="talkatu/talkatubuffer.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="508">The #TalkatuBuffer instance.</doc>
            <type name="Buffer" c:type="TalkatuBuffer*"/>
          </instance-parameter>
          <parameter name="pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="509">The #GtkTextIter where the text should be inserted.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="new_text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="510">The new text to insert.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="new_text_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="511">The len of @new_text.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="clear" c:identifier="talkatu_buffer_clear">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="646">Clears all text out of the buffer.</doc>
        <source-position filename="talkatu/talkatubuffer.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="648">The #TalkatuBuffer instance.</doc>
            <type name="Buffer" c:type="TalkatuBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_action_group"
              c:identifier="talkatu_buffer_get_action_group">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="472">A #TalkatuBuffer can support multiple actions, whether it's formatting
of text, or being able to insert images, code, etc.  This function is called
by #TalkatuView to map them to keybindings as well as the format
toolbar.</doc>
        <source-position filename="talkatu/talkatubuffer.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatubuffer.c"
               line="481">The #GSimpleActionGroup the @buffer supports.</doc>
          <type name="Gio.SimpleActionGroup" c:type="GSimpleActionGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="474">A #TalkatuBuffer instance.</doc>
            <type name="Buffer" c:type="TalkatuBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_empty" c:identifier="talkatu_buffer_get_is_empty">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="681">Returns whether or not @buffer has any text in it.</doc>
        <source-position filename="talkatu/talkatubuffer.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatubuffer.c"
               line="687">%TRUE if empty, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="683">The #TalkatuBuffer instance.</doc>
            <type name="Buffer" c:type="TalkatuBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_plain_text"
              c:identifier="talkatu_buffer_get_plain_text">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="662">Returns the text from the buffer without markup.

Returns (transfer full): A copy of the text from @buffer.</doc>
        <source-position filename="talkatu/talkatubuffer.h" line="66"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="664">The #TalkatuBuffer instance.</doc>
            <type name="Buffer" c:type="TalkatuBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_style" c:identifier="talkatu_buffer_get_style">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="453">Gets format style of @buffer.</doc>
        <source-position filename="talkatu/talkatubuffer.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatubuffer.c"
               line="459">The format style of @buffer.</doc>
          <type name="BufferStyle" c:type="TalkatuBufferStyle"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="455">A #TalkatuBuffer instance.</doc>
            <type name="Buffer" c:type="TalkatuBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_link" c:identifier="talkatu_buffer_insert_link">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="587">Inserts a link into @buffer with the given @url and @display_text.  If
@display_text is not given, @url will be used.</doc>
        <source-position filename="talkatu/talkatubuffer.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="589">The #TalkatuBuffer instance.</doc>
            <type name="Buffer" c:type="TalkatuBuffer*"/>
          </instance-parameter>
          <parameter name="pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="590">The #GtkTextIter where to insert the link.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="display_text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="591">The Text to display for the link.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="592">The url to link to.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_markup" c:identifier="talkatu_buffer_insert_markup">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="506">Inserts text that will be or already is marked up.  Calling this tells
@buffer to not apply the currently selected format to the newly inserted
text, which is what it does when text is normally inserted.</doc>
        <source-position filename="talkatu/talkatubuffer.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="508">The #TalkatuBuffer instance.</doc>
            <type name="Buffer" c:type="TalkatuBuffer*"/>
          </instance-parameter>
          <parameter name="pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="509">The #GtkTextIter where the text should be inserted.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="new_text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="510">The new text to insert.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="new_text_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="511">The len of @new_text.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_markup_with_tags_by_name"
              c:identifier="talkatu_buffer_insert_markup_with_tags_by_name"
              introspectable="0">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="533">Similar to #talkatu_buffer_insert_markup but allows you to specify
tags to apply to the newly inserted text.</doc>
        <source-position filename="talkatu/talkatubuffer.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="535">The #TalkatuBuffer instance.</doc>
            <type name="Buffer" c:type="TalkatuBuffer*"/>
          </instance-parameter>
          <parameter name="pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="536">The #GtkTextIter where the text should be inserted.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="new_text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="537">UTF-8 text.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="new_text_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="538">The len of @new_text, or -1.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="first_tag_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="539">The name of the first tag to apply to @new_text.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatubuffer.c"
                 line="540">Additional tags to apply to @new_text.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <property name="action-group"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gio.ActionGroup"/>
      </property>
      <property name="style"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="BufferStyle"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.TextBuffer" c:type="GtkTextBuffer"/>
      </field>
    </class>
    <record name="BufferClass"
            c:type="TalkatuBufferClass"
            glib:is-gtype-struct-for="Buffer">
      <doc xml:space="preserve"
           filename="talkatu/talkatubuffer.c"
           line="51">The backing class to #TalkatuBuffer.</doc>
      <source-position filename="talkatu/talkatubuffer.h" line="53"/>
      <field name="parent" readable="0" private="1">
        <type name="Gtk.TextBufferClass" c:type="GtkTextBufferClass"/>
      </field>
      <field name="insert_markup">
        <callback name="insert_markup">
          <source-position filename="talkatu/talkatubuffer.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatubuffer.c"
                   line="508">The #TalkatuBuffer instance.</doc>
              <type name="Buffer" c:type="TalkatuBuffer*"/>
            </parameter>
            <parameter name="pos" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatubuffer.c"
                   line="509">The #GtkTextIter where the text should be inserted.</doc>
              <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
            </parameter>
            <parameter name="new_text" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatubuffer.c"
                   line="510">The new text to insert.</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="new_text_length" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatubuffer.c"
                   line="511">The len of @new_text.</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_action_group" introspectable="0">
        <callback name="create_action_group" introspectable="0">
          <source-position filename="talkatu/talkatubuffer.h" line="49"/>
          <return-value>
            <type name="Gio.SimpleActionGroup" c:type="GSimpleActionGroup*"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <type name="Buffer" c:type="TalkatuBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="BufferStyle"
                 glib:type-name="TalkatuBufferStyle"
                 glib:get-type="talkatu_buffer_style_get_type"
                 c:type="TalkatuBufferStyle">
      <doc xml:space="preserve"
           filename="talkatu/talkatubuffer.c"
           line="69">The format style of a #TalkatuBuffer.</doc>
      <member name="rich"
              value="0"
              c:identifier="TALKATU_BUFFER_STYLE_RICH"
              glib:nick="rich">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="71">Format the buffer character by character.</doc>
      </member>
      <member name="whole"
              value="1"
              c:identifier="TALKATU_BUFFER_STYLE_WHOLE"
              glib:nick="whole">
        <doc xml:space="preserve"
             filename="talkatu/talkatubuffer.c"
             line="72">Format the buffer as a whole.</doc>
      </member>
    </enumeration>
    <enumeration name="ContentType"
                 glib:type-name="TalkatuContentType"
                 glib:get-type="talkatu_content_type_get_type"
                 c:type="TalkatuContentType">
      <doc xml:space="preserve"
           filename="talkatu/talkatumessage.c"
           line="68">An enum representing a given markup type.</doc>
      <member name="plain"
              value="0"
              c:identifier="TALKATU_CONTENT_TYPE_PLAIN"
              glib:nick="plain">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="70">Plain text content.</doc>
      </member>
      <member name="pango"
              value="1"
              c:identifier="TALKATU_CONTENT_TYPE_PANGO"
              glib:nick="pango">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="71">Pango Markup content.</doc>
      </member>
      <member name="html"
              value="2"
              c:identifier="TALKATU_CONTENT_TYPE_HTML"
              glib:nick="html">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="72">HTML content.</doc>
      </member>
      <member name="markdown"
              value="3"
              c:identifier="TALKATU_CONTENT_TYPE_MARKDOWN"
              glib:nick="markdown">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="73">Markdown content.</doc>
      </member>
    </enumeration>
    <constant name="EXTRA_VERSION" value="dev" c:type="TALKATU_EXTRA_VERSION">
      <doc xml:space="preserve"
           filename="talkatu/talkatuversion.h"
           line="55">The extra version if any of Talkatu that's being compiled against.</doc>
      <source-position filename="talkatu/talkatuversion.h" line="60"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Editor"
           c:symbol-prefix="editor"
           c:type="TalkatuEditor"
           parent="Gtk.Box"
           glib:type-name="TalkatuEditor"
           glib:get-type="talkatu_editor_get_type"
           glib:type-struct="EditorClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatueditor.c"
           line="27">TalkatuEditor is a composite widget of #TalkatuToolbar and #TalkatuView to
help make them easier to use.</doc>
      <source-position filename="talkatu/talkatueditor.h" line="34"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="talkatu_editor_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatueditor.c"
             line="234">Creates a new #TalkatuEditor with a normal #GtkTextBuffer.</doc>
        <source-position filename="talkatu/talkatueditor.h" line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatueditor.c"
               line="239">The new #TalkatuEditor instance.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_buffer" c:identifier="talkatu_editor_get_buffer">
        <doc xml:space="preserve"
             filename="talkatu/talkatueditor.c"
             line="305">Gets the #GtkTextBuffer for the internal input.</doc>
        <source-position filename="talkatu/talkatueditor.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatueditor.c"
               line="311">The #GtkTextBuffer for the internal input.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="307">The #TalkatuEditor instance.</doc>
            <type name="Editor" c:type="TalkatuEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_input" c:identifier="talkatu_editor_get_input">
        <doc xml:space="preserve"
             filename="talkatu/talkatueditor.c"
             line="290">Gets the #TalkatuInput that @editor is using.</doc>
        <source-position filename="talkatu/talkatueditor.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatueditor.c"
               line="296">The #TalkatuInput that @editor is using.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="292">The #TalkatuEditor instance.</doc>
            <type name="Editor" c:type="TalkatuEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_send_button_visible"
              c:identifier="talkatu_editor_get_send_button_visible">
        <doc xml:space="preserve"
             filename="talkatu/talkatueditor.c"
             line="334">Returns whether or not the send button is visible.</doc>
        <source-position filename="talkatu/talkatueditor.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatueditor.c"
               line="340">%TRUE if the send button is visible, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="336">The #TalkatuEditor instance.</doc>
            <type name="Editor" c:type="TalkatuEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_toolbar" c:identifier="talkatu_editor_get_toolbar">
        <doc xml:space="preserve"
             filename="talkatu/talkatueditor.c"
             line="246">Gets the #TalkatuToolbar that @editor is using.</doc>
        <source-position filename="talkatu/talkatueditor.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatueditor.c"
               line="252">The #TalkatuToolbar that @editor is using.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="248">The #TalkatuEditor instance.</doc>
            <type name="Editor" c:type="TalkatuEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_toolbar_visible"
              c:identifier="talkatu_editor_get_toolbar_visible">
        <doc xml:space="preserve"
             filename="talkatu/talkatueditor.c"
             line="275">Returns whether or not the toolbar is visible.</doc>
        <source-position filename="talkatu/talkatueditor.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatueditor.c"
               line="281">%TRUE if the toolbar is visible, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="277">The #TalkatuEditor instance.</doc>
            <type name="Editor" c:type="TalkatuEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_buffer" c:identifier="talkatu_editor_set_buffer">
        <doc xml:space="preserve"
             filename="talkatu/talkatueditor.c"
             line="320">Sets the #GtkTextBuffer for the internal input to @buffer.</doc>
        <source-position filename="talkatu/talkatueditor.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="322">The #TalkatuEditor instance.</doc>
            <type name="Editor" c:type="TalkatuEditor*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="323">A new #GtkTextBuffer to use.</doc>
            <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_send_button_visible"
              c:identifier="talkatu_editor_set_send_button_visible">
        <doc xml:space="preserve"
             filename="talkatu/talkatueditor.c"
             line="349">Sets the visibility of the send button depending on @visible.</doc>
        <source-position filename="talkatu/talkatueditor.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="351">The #TalkatuEditor instance.</doc>
            <type name="Editor" c:type="TalkatuEditor*"/>
          </instance-parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="352">Whether or not the send button should be visible.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_toolbar_visible"
              c:identifier="talkatu_editor_set_toolbar_visible">
        <doc xml:space="preserve"
             filename="talkatu/talkatueditor.c"
             line="261">Makes the toolbar visible if @visible is %TRUE otherwise hides it.</doc>
        <source-position filename="talkatu/talkatueditor.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="263">The #TalkatuEditor instance.</doc>
            <type name="Editor" c:type="TalkatuEditor*"/>
          </instance-parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatueditor.c"
                 line="264">Whether or not the toolbar should be visible.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="buffer"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="Gtk.TextBuffer"/>
      </property>
      <property name="input" transfer-ownership="none">
        <type name="View"/>
      </property>
      <property name="show-send-button"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-toolbar"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="toolbar" transfer-ownership="none">
        <type name="Toolbar"/>
      </property>
    </class>
    <record name="EditorClass"
            c:type="TalkatuEditorClass"
            glib:is-gtype-struct-for="Editor">
      <source-position filename="talkatu/talkatueditor.h" line="34"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <class name="History"
           c:symbol-prefix="history"
           c:type="TalkatuHistory"
           parent="Gtk.ListBox"
           glib:type-name="TalkatuHistory"
           glib:get-type="talkatu_history_get_type"
           glib:type-struct="HistoryClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuhistory.c"
           line="27">This widget is used to display the conversation history.  It doesn't care if
it is multi user or one to one.</doc>
      <source-position filename="talkatu/talkatuhistory.h" line="37"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="talkatu_history_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatuhistory.c"
             line="68">Creates a new #TalkatuHistory for displaying chat history.</doc>
        <source-position filename="talkatu/talkatuhistory.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuhistory.c"
               line="73">The new #TalkatuHistory instance.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="write_message"
              c:identifier="talkatu_history_write_message">
        <doc xml:space="preserve"
             filename="talkatu/talkatuhistory.c"
             line="82">Adds @message to @history.  Messages are sorted by timestamp so make sure
it is set correctly.</doc>
        <source-position filename="talkatu/talkatuhistory.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="history" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhistory.c"
                 line="84">The #TalkatuHistory instance.</doc>
            <type name="History" c:type="TalkatuHistory*"/>
          </instance-parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhistory.c"
                 line="85">The #TalkatuMessage to add to @history.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="HistoryClass"
            c:type="TalkatuHistoryClass"
            glib:is-gtype-struct-for="History">
      <source-position filename="talkatu/talkatuhistory.h" line="37"/>
      <field name="parent_class">
        <type name="Gtk.ListBoxClass" c:type="GtkListBoxClass"/>
      </field>
    </record>
    <class name="HistoryRow"
           c:symbol-prefix="history_row"
           c:type="TalkatuHistoryRow"
           parent="Gtk.ListBoxRow"
           glib:type-name="TalkatuHistoryRow"
           glib:get-type="talkatu_history_row_get_type"
           glib:type-struct="HistoryRowClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuhistoryrow.c"
           line="27">This widget is used to display a single message in the conversation history.</doc>
      <source-position filename="talkatu/talkatuhistoryrow.h" line="37"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="talkatu_history_row_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatuhistoryrow.c"
             line="264">Creates a new #TalkatuHistoryRow for displaying @message.</doc>
        <source-position filename="talkatu/talkatuhistoryrow.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuhistoryrow.c"
               line="270">The new #TalkatuHistoryRow instance.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhistoryrow.c"
                 line="266">The #TalkatuMessage instance that will be displayed.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="message"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GObject.Object"/>
      </property>
    </class>
    <record name="HistoryRowClass"
            c:type="TalkatuHistoryRowClass"
            glib:is-gtype-struct-for="HistoryRow">
      <source-position filename="talkatu/talkatuhistoryrow.h" line="37"/>
      <field name="parent_class">
        <type name="Gtk.ListBoxRowClass" c:type="GtkListBoxRowClass"/>
      </field>
    </record>
    <class name="HtmlBuffer"
           c:symbol-prefix="html_buffer"
           c:type="TalkatuHtmlBuffer"
           parent="Buffer"
           glib:type-name="TalkatuHtmlBuffer"
           glib:get-type="talkatu_html_buffer_get_type"
           glib:type-struct="HtmlBufferClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuhtmlbuffer.c"
           line="27">Support for HTML is provided via a custom GtkTextBuffer that knows how
to render it properly.</doc>
      <source-position filename="talkatu/talkatuhtmlbuffer.h" line="48"/>
      <constructor name="new" c:identifier="talkatu_html_buffer_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatuhtmlbuffer.c"
             line="111">Creates a new #TalkatuHtmlBuffer.  A #TalkatuHtmlBuffer supports HTML
formatting as well as pasting rendered HTML.</doc>
        <source-position filename="talkatu/talkatuhtmlbuffer.h" line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuhtmlbuffer.c"
               line="117">The new #TalkatuHtmlBuffer instance.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </return-value>
      </constructor>
      <virtual-method name="insert_html" invoker="insert_html">
        <doc xml:space="preserve"
             filename="talkatu/talkatuhtmlbuffer.c"
             line="127">Inserts and renders @text as HTML into @buffer.</doc>
        <source-position filename="talkatu/talkatuhtmlbuffer.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlbuffer.c"
                 line="129">The #TalkatuHtmlBuffer instance.</doc>
            <type name="HtmlBuffer" c:type="TalkatuHtmlBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlbuffer.c"
                 line="130">The #GtkTextIter where to insert the HTML.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlbuffer.c"
                 line="131">The HTML text to insert.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlbuffer.c"
                 line="132">The length of @text or -1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="insert_html"
              c:identifier="talkatu_html_buffer_insert_html">
        <doc xml:space="preserve"
             filename="talkatu/talkatuhtmlbuffer.c"
             line="127">Inserts and renders @text as HTML into @buffer.</doc>
        <source-position filename="talkatu/talkatuhtmlbuffer.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlbuffer.c"
                 line="129">The #TalkatuHtmlBuffer instance.</doc>
            <type name="HtmlBuffer" c:type="TalkatuHtmlBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlbuffer.c"
                 line="130">The #GtkTextIter where to insert the HTML.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlbuffer.c"
                 line="131">The HTML text to insert.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlbuffer.c"
                 line="132">The length of @text or -1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Buffer" c:type="TalkatuBuffer"/>
      </field>
    </class>
    <record name="HtmlBufferClass"
            c:type="TalkatuHtmlBufferClass"
            glib:is-gtype-struct-for="HtmlBuffer">
      <doc xml:space="preserve"
           filename="talkatu/talkatuhtmlbuffer.c"
           line="48">The backing class to #TalkatuHtmlBuffer.</doc>
      <source-position filename="talkatu/talkatuhtmlbuffer.h" line="48"/>
      <field name="parent" readable="0" private="1">
        <type name="BufferClass" c:type="TalkatuBufferClass"/>
      </field>
      <field name="insert_html">
        <callback name="insert_html">
          <source-position filename="talkatu/talkatuhtmlbuffer.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatuhtmlbuffer.c"
                   line="129">The #TalkatuHtmlBuffer instance.</doc>
              <type name="HtmlBuffer" c:type="TalkatuHtmlBuffer*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatuhtmlbuffer.c"
                   line="130">The #GtkTextIter where to insert the HTML.</doc>
              <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
            </parameter>
            <parameter name="text" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatuhtmlbuffer.c"
                   line="131">The HTML text to insert.</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="len" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatuhtmlbuffer.c"
                   line="132">The length of @text or -1</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="HtmlPangoRenderer"
           c:symbol-prefix="html_pango_renderer"
           c:type="TalkatuHtmlPangoRenderer"
           parent="HtmlRenderer"
           glib:type-name="TalkatuHtmlPangoRenderer"
           glib:get-type="talkatu_html_pango_renderer_get_type"
           glib:type-struct="HtmlPangoRendererClass">
      <source-position filename="talkatu/talkatuhtmlpangorenderer.h"
                       line="32"/>
      <constructor name="new" c:identifier="talkatu_html_pango_renderer_new">
        <source-position filename="talkatu/talkatuhtmlpangorenderer.h"
                         line="37"/>
        <return-value transfer-ownership="full">
          <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
        </return-value>
      </constructor>
      <method name="get_string"
              c:identifier="talkatu_html_pango_renderer_get_string">
        <source-position filename="talkatu/talkatuhtmlpangorenderer.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="renderer" transfer-ownership="none">
            <type name="HtmlPangoRenderer" c:type="TalkatuHtmlPangoRenderer*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="HtmlPangoRendererClass"
            c:type="TalkatuHtmlPangoRendererClass"
            glib:is-gtype-struct-for="HtmlPangoRenderer">
      <source-position filename="talkatu/talkatuhtmlpangorenderer.h"
                       line="32"/>
      <field name="parent_class">
        <type name="HtmlRendererClass" c:type="TalkatuHtmlRendererClass"/>
      </field>
    </record>
    <class name="HtmlRenderer"
           c:symbol-prefix="html_renderer"
           c:type="TalkatuHtmlRenderer"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="TalkatuHtmlRenderer"
           glib:get-type="talkatu_html_renderer_get_type"
           glib:type-struct="HtmlRendererClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuhtmlrenderer.c"
           line="23">#TalkatuHtmlRenderer is an abstract class that will parse HTML and call the
registered instance methods for each element allowing subclasses to render
the HTML however they like.</doc>
      <source-position filename="talkatu/talkatuhtmlrenderer.h" line="47"/>
      <virtual-method name="comment">
        <source-position filename="talkatu/talkatuhtmlrenderer.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="renderer" transfer-ownership="none">
            <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
          </instance-parameter>
          <parameter name="comment" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="element_finish">
        <source-position filename="talkatu/talkatuhtmlrenderer.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="renderer" transfer-ownership="none">
            <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="element_start">
        <source-position filename="talkatu/talkatuhtmlrenderer.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="renderer" transfer-ownership="none">
            <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="attribute_names" transfer-ownership="none">
            <type name="utf8" c:type="const gchar**"/>
          </parameter>
          <parameter name="attribute_values" transfer-ownership="none">
            <type name="utf8" c:type="const gchar**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="reset" invoker="reset">
        <doc xml:space="preserve"
             filename="talkatu/talkatuhtmlrenderer.c"
             line="306">Resets @renderer back to a clean state so that it can render new HTML.</doc>
        <source-position filename="talkatu/talkatuhtmlrenderer.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlrenderer.c"
                 line="308">The #TalkatuHtmlRenderer instance.</doc>
            <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="text">
        <source-position filename="talkatu/talkatuhtmlrenderer.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="renderer" transfer-ownership="none">
            <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="render" c:identifier="talkatu_html_renderer_render">
        <doc xml:space="preserve"
             filename="talkatu/talkatuhtmlrenderer.c"
             line="173">Renders the given @html calling the #TalkatuHtmlRendererClass functions as
necessary.</doc>
        <source-position filename="talkatu/talkatuhtmlrenderer.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlrenderer.c"
                 line="175">The #TalkatuHtmlRenderer instance.</doc>
            <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
          </instance-parameter>
          <parameter name="html" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlrenderer.c"
                 line="176">The HTML text to render.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="talkatu_html_renderer_reset">
        <doc xml:space="preserve"
             filename="talkatu/talkatuhtmlrenderer.c"
             line="306">Resets @renderer back to a clean state so that it can render new HTML.</doc>
        <source-position filename="talkatu/talkatuhtmlrenderer.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuhtmlrenderer.c"
                 line="308">The #TalkatuHtmlRenderer instance.</doc>
            <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="HtmlRendererClass"
            c:type="TalkatuHtmlRendererClass"
            glib:is-gtype-struct-for="HtmlRenderer">
      <doc xml:space="preserve"
           filename="talkatu/talkatuhtmlrenderer.c"
           line="39">An abstract class that will walk an HTML document and call the instance
methods of the child class for each node that is found.</doc>
      <source-position filename="talkatu/talkatuhtmlrenderer.h" line="47"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="reset">
        <callback name="reset">
          <source-position filename="talkatu/talkatuhtmlrenderer.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="renderer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatuhtmlrenderer.c"
                   line="308">The #TalkatuHtmlRenderer instance.</doc>
              <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="element_start">
        <callback name="element_start">
          <source-position filename="talkatu/talkatuhtmlrenderer.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="renderer" transfer-ownership="none">
              <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="attribute_names" transfer-ownership="none">
              <type name="utf8" c:type="const gchar**"/>
            </parameter>
            <parameter name="attribute_values" transfer-ownership="none">
              <type name="utf8" c:type="const gchar**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="element_finish">
        <callback name="element_finish">
          <source-position filename="talkatu/talkatuhtmlrenderer.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="renderer" transfer-ownership="none">
              <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="text">
        <callback name="text">
          <source-position filename="talkatu/talkatuhtmlrenderer.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="renderer" transfer-ownership="none">
              <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
            </parameter>
            <parameter name="text" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="comment">
        <callback name="comment">
          <source-position filename="talkatu/talkatuhtmlrenderer.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="renderer" transfer-ownership="none">
              <type name="HtmlRenderer" c:type="TalkatuHtmlRenderer*"/>
            </parameter>
            <parameter name="comment" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Input"
           c:symbol-prefix="input"
           c:type="TalkatuInput"
           parent="View"
           glib:type-name="TalkatuInput"
           glib:get-type="talkatu_input_get_type"
           glib:type-struct="InputClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuinput.c"
           line="34">#TalkatuInput handles all of the details for sending messages.</doc>
      <source-position filename="talkatu/talkatuinput.h" line="56"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <implements name="Message"/>
      <constructor name="new" c:identifier="talkatu_input_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="842">Creates a new #TalkatuInput instance.</doc>
        <source-position filename="talkatu/talkatuinput.h" line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuinput.c"
               line="847">The new #TalkatuInput instance.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="send_message" invoker="send_message">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="896">Emits the signal that @input is trying to send a message.  This is used for
cases like the optional send button in #TalkatuEditor and other instances
where the user has performed an action to send a message.</doc>
        <source-position filename="talkatu/talkatuinput.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuinput.c"
                 line="898">The #TalkatuInput instance.</doc>
            <type name="Input" c:type="TalkatuInput*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="should_send_message">
        <source-position filename="talkatu/talkatuinput.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="input" transfer-ownership="none">
            <type name="Input" c:type="TalkatuInput*"/>
          </instance-parameter>
          <parameter name="binding" transfer-ownership="none">
            <type name="InputSendBinding" c:type="TalkatuInputSendBinding"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_send_binding"
              c:identifier="talkatu_input_get_send_binding">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="876">Gets the #TalkatuInputSendBinding which determines when send-message
signal will be emitted.</doc>
        <source-position filename="talkatu/talkatuinput.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuinput.c"
               line="883">The #TalkatuInputSendBinding.</doc>
          <type name="InputSendBinding" c:type="TalkatuInputSendBinding"/>
        </return-value>
        <parameters>
          <instance-parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuinput.c"
                 line="878">The #TalkatuInput instance.</doc>
            <type name="Input" c:type="TalkatuInput*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="send_message" c:identifier="talkatu_input_send_message">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="896">Emits the signal that @input is trying to send a message.  This is used for
cases like the optional send button in #TalkatuEditor and other instances
where the user has performed an action to send a message.</doc>
        <source-position filename="talkatu/talkatuinput.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuinput.c"
                 line="898">The #TalkatuInput instance.</doc>
            <type name="Input" c:type="TalkatuInput*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_send_binding"
              c:identifier="talkatu_input_set_send_binding">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="854">Sets the bindings for when the send-message signal should be emitted.</doc>
        <source-position filename="talkatu/talkatuinput.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuinput.c"
                 line="856">The #TalkatuInput instance.</doc>
            <type name="Input" c:type="TalkatuInput*"/>
          </instance-parameter>
          <parameter name="bindings" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuinput.c"
                 line="857">The #TalkatuInputSendBinding value.</doc>
            <type name="InputSendBinding" c:type="TalkatuInputSendBinding"/>
          </parameter>
        </parameters>
      </method>
      <property name="send-binding"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="InputSendBinding"/>
      </property>
      <field name="parent_instance">
        <type name="View" c:type="TalkatuView"/>
      </field>
      <glib:signal name="send-message" when="last" action="1">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="810">Emitted when a message should be sent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="should-send-message" when="last" action="1">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="788">Emitted when a potential keybinding to send the message is entered to
determine if the message should be sent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuinput.c"
                 line="791">The #TalkatuInputSendBinding that was entered.</doc>
            <type name="InputSendBinding"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="InputClass"
            c:type="TalkatuInputClass"
            glib:is-gtype-struct-for="Input">
      <doc xml:space="preserve"
           filename="talkatu/talkatuinput.c"
           line="62">The backing class to #TalkatuInput instances.</doc>
      <source-position filename="talkatu/talkatuinput.h" line="56"/>
      <field name="parent" readable="0" private="1">
        <type name="ViewClass" c:type="TalkatuViewClass"/>
      </field>
      <field name="should_send_message">
        <callback name="should_send_message">
          <source-position filename="talkatu/talkatuinput.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="input" transfer-ownership="none">
              <type name="Input" c:type="TalkatuInput*"/>
            </parameter>
            <parameter name="binding" transfer-ownership="none">
              <type name="InputSendBinding" c:type="TalkatuInputSendBinding"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="send_message">
        <callback name="send_message">
          <source-position filename="talkatu/talkatuinput.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="input" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatuinput.c"
                   line="898">The #TalkatuInput instance.</doc>
              <type name="Input" c:type="TalkatuInput*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <bitfield name="InputSendBinding"
              glib:type-name="TalkatuInputSendBinding"
              glib:get-type="talkatu_input_send_binding_get_type"
              c:type="TalkatuInputSendBinding">
      <doc xml:space="preserve"
           filename="talkatu/talkatuinput.c"
           line="71">Flags for assigning and determining which key bindings should be used to
send a message.</doc>
      <member name="return"
              value="1"
              c:identifier="TALKATU_INPUT_SEND_BINDING_RETURN"
              glib:nick="return">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="73">Represents return.</doc>
      </member>
      <member name="kp_enter"
              value="2"
              c:identifier="TALKATU_INPUT_SEND_BINDING_KP_ENTER"
              glib:nick="kp-enter">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="74">Represents enter.</doc>
      </member>
      <member name="shift_return"
              value="4"
              c:identifier="TALKATU_INPUT_SEND_BINDING_SHIFT_RETURN"
              glib:nick="shift-return">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="75">Represents shift-return.</doc>
      </member>
      <member name="control_return"
              value="8"
              c:identifier="TALKATU_INPUT_SEND_BINDING_CONTROL_RETURN"
              glib:nick="control-return">
        <doc xml:space="preserve"
             filename="talkatu/talkatuinput.c"
             line="76">Represents control-return.</doc>
      </member>
    </bitfield>
    <class name="LinkDialog"
           c:symbol-prefix="link_dialog"
           c:type="TalkatuLinkDialog"
           parent="Gtk.Dialog"
           glib:type-name="TalkatuLinkDialog"
           glib:get-type="talkatu_link_dialog_get_type"
           glib:type-struct="LinkDialogClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatulinkdialog.c"
           line="23">A simple dialog to aid in the creation of a link.</doc>
      <source-position filename="talkatu/talkatulinkdialog.h" line="35"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="talkatu_link_dialog_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatulinkdialog.c"
             line="76">Creates a new #TalkatuLinkDialog with a #TalkatuBuffer.</doc>
        <source-position filename="talkatu/talkatulinkdialog.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatulinkdialog.c"
               line="81">The new #TalkatuLinkDialog.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_display_text"
              c:identifier="talkatu_link_dialog_get_display_text">
        <doc xml:space="preserve"
             filename="talkatu/talkatulinkdialog.c"
             line="117">Gets the display text that the user entered with leading and trailing
whitespace removed.</doc>
        <source-position filename="talkatu/talkatulinkdialog.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatulinkdialog.c"
               line="124">The display text that the user entered.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatulinkdialog.c"
                 line="119">The #TalkatuLinkDialog.</doc>
            <type name="LinkDialog" c:type="TalkatuLinkDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="talkatu_link_dialog_get_url">
        <doc xml:space="preserve"
             filename="talkatu/talkatulinkdialog.c"
             line="91">Gets the URL that the user entered with leading and trailing whitespace
removed.</doc>
        <source-position filename="talkatu/talkatulinkdialog.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatulinkdialog.c"
               line="98">The URL that the user entered.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatulinkdialog.c"
                 line="93">The #TalkatuLinkDialog.</doc>
            <type name="LinkDialog" c:type="TalkatuLinkDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="LinkDialogClass"
            c:type="TalkatuLinkDialogClass"
            glib:is-gtype-struct-for="LinkDialog">
      <source-position filename="talkatu/talkatulinkdialog.h" line="35"/>
      <field name="parent_class">
        <type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
      </field>
    </record>
    <constant name="MAJOR_VERSION" value="0" c:type="TALKATU_MAJOR_VERSION">
      <doc xml:space="preserve"
           filename="talkatu/talkatuversion.h"
           line="34">The major version of Talkatu that's being compiled against.</doc>
      <source-position filename="talkatu/talkatuversion.h" line="39"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MICRO_VERSION" value="0" c:type="TALKATU_MICRO_VERSION">
      <doc xml:space="preserve"
           filename="talkatu/talkatuversion.h"
           line="48">The micro version of Talkatu that's being compiled against.</doc>
      <source-position filename="talkatu/talkatuversion.h" line="53"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION" value="1" c:type="TALKATU_MINOR_VERSION">
      <doc xml:space="preserve"
           filename="talkatu/talkatuversion.h"
           line="41">The minor version of Talkatu that's being compiled against.</doc>
      <source-position filename="talkatu/talkatuversion.h" line="46"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="MarkdownBuffer"
           c:symbol-prefix="markdown_buffer"
           c:type="TalkatuMarkdownBuffer"
           parent="Buffer"
           glib:type-name="TalkatuMarkdownBuffer"
           glib:get-type="talkatu_markdown_buffer_get_type"
           glib:type-struct="MarkdownBufferClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatumarkdownbuffer.c"
           line="28">Support for Markdown is provided via a custom GtkTextBuffer that knows how
to render it properly.</doc>
      <source-position filename="talkatu/talkatumarkdownbuffer.h" line="48"/>
      <constructor name="new" c:identifier="talkatu_markdown_buffer_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatumarkdownbuffer.c"
             line="310">Creates a new #TalkatuMarkdownBuffer that can render Markdown.</doc>
        <source-position filename="talkatu/talkatumarkdownbuffer.h" line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkdownbuffer.c"
               line="315">The new #TalkatuMarkdownBuffer.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </return-value>
      </constructor>
      <virtual-method name="insert_markdown" invoker="insert_markdown">
        <doc xml:space="preserve"
             filename="talkatu/talkatumarkdownbuffer.c"
             line="325">Inserts and renders @text into @buffer.</doc>
        <source-position filename="talkatu/talkatumarkdownbuffer.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumarkdownbuffer.c"
                 line="327">The #TalkatuMarkdownBuffer instance.</doc>
            <type name="MarkdownBuffer" c:type="TalkatuMarkdownBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumarkdownbuffer.c"
                 line="328">The #GtkTextIter where the text should be inserted.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumarkdownbuffer.c"
                 line="329">The UTF-8 Markdown text that should be inserted.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumarkdownbuffer.c"
                 line="330">The length of @text or -1.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="insert_markdown"
              c:identifier="talkatu_markdown_buffer_insert_markdown">
        <doc xml:space="preserve"
             filename="talkatu/talkatumarkdownbuffer.c"
             line="325">Inserts and renders @text into @buffer.</doc>
        <source-position filename="talkatu/talkatumarkdownbuffer.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumarkdownbuffer.c"
                 line="327">The #TalkatuMarkdownBuffer instance.</doc>
            <type name="MarkdownBuffer" c:type="TalkatuMarkdownBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumarkdownbuffer.c"
                 line="328">The #GtkTextIter where the text should be inserted.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumarkdownbuffer.c"
                 line="329">The UTF-8 Markdown text that should be inserted.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumarkdownbuffer.c"
                 line="330">The length of @text or -1.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Buffer" c:type="TalkatuBuffer"/>
      </field>
    </class>
    <record name="MarkdownBufferClass"
            c:type="TalkatuMarkdownBufferClass"
            glib:is-gtype-struct-for="MarkdownBuffer">
      <doc xml:space="preserve"
           filename="talkatu/talkatumarkdownbuffer.c"
           line="49">The backing class for #TalkatuMarkdownBuffer.</doc>
      <source-position filename="talkatu/talkatumarkdownbuffer.h" line="48"/>
      <field name="parent" readable="0" private="1">
        <type name="BufferClass" c:type="TalkatuBufferClass"/>
      </field>
      <field name="insert_markdown">
        <callback name="insert_markdown">
          <source-position filename="talkatu/talkatumarkdownbuffer.h"
                           line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumarkdownbuffer.c"
                   line="327">The #TalkatuMarkdownBuffer instance.</doc>
              <type name="MarkdownBuffer" c:type="TalkatuMarkdownBuffer*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumarkdownbuffer.c"
                   line="328">The #GtkTextIter where the text should be inserted.</doc>
              <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
            </parameter>
            <parameter name="text" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumarkdownbuffer.c"
                   line="329">The UTF-8 Markdown text that should be inserted.</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="len" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumarkdownbuffer.c"
                   line="330">The length of @text or -1.</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="MenuToolButton"
           c:symbol-prefix="menu_tool_button"
           c:type="TalkatuMenuToolButton"
           parent="Gtk.ToolButton"
           glib:type-name="TalkatuMenuToolButton"
           glib:get-type="talkatu_menu_tool_button_get_type"
           glib:type-struct="MenuToolButtonClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatumenutoolbutton.c"
           line="23">The normal #GtkMenuToolButton forces you to have an action on the always
visible button.  This #GtkToolItem instead just uses a label with no action.</doc>
      <source-position filename="talkatu/talkatumenutoolbutton.h" line="35"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Activatable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="talkatu_menu_tool_button_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatumenutoolbutton.c"
             line="130">Creates a new #TalkatuMenuToolButton with the given @label, @icon_name, and
@menu.</doc>
        <source-position filename="talkatu/talkatumenutoolbutton.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatumenutoolbutton.c"
               line="139">The new #TalkatuMenuToolButton instance.</doc>
          <type name="Gtk.ToolItem" c:type="GtkToolItem*"/>
        </return-value>
        <parameters>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumenutoolbutton.c"
                 line="132">The label to display.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumenutoolbutton.c"
                 line="133">The optional name of the icon to display.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="menu" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumenutoolbutton.c"
                 line="134">The menu to display.</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_menu" c:identifier="talkatu_menu_tool_button_get_menu">
        <doc xml:space="preserve"
             filename="talkatu/talkatumenutoolbutton.c"
             line="152">Gets the menu that this tool button will display on click or #NULL if no
menu is set.</doc>
        <source-position filename="talkatu/talkatumenutoolbutton.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatumenutoolbutton.c"
               line="159">The menu.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="menu_button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumenutoolbutton.c"
                 line="154">The #TalkatuMenuToolButton instance.</doc>
            <type name="MenuToolButton" c:type="TalkatuMenuToolButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_menu" c:identifier="talkatu_menu_tool_button_set_menu">
        <doc xml:space="preserve"
             filename="talkatu/talkatumenutoolbutton.c"
             line="172">Sets the menu to be displayed when the user clicks the button.</doc>
        <source-position filename="talkatu/talkatumenutoolbutton.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="menu_button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumenutoolbutton.c"
                 line="174">The #TalkatuMenuToolButton instance.</doc>
            <type name="MenuToolButton" c:type="TalkatuMenuToolButton*"/>
          </instance-parameter>
          <parameter name="menu" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumenutoolbutton.c"
                 line="175">The menu to set.</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <property name="menu"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="Gtk.Menu"/>
      </property>
    </class>
    <record name="MenuToolButtonClass"
            c:type="TalkatuMenuToolButtonClass"
            glib:is-gtype-struct-for="MenuToolButton">
      <source-position filename="talkatu/talkatumenutoolbutton.h" line="35"/>
      <field name="parent_class">
        <type name="Gtk.ToolButtonClass" c:type="GtkToolButtonClass"/>
      </field>
    </record>
    <interface name="Message"
               c:symbol-prefix="message"
               c:type="TalkatuMessage"
               glib:type-name="TalkatuMessage"
               glib:get-type="talkatu_message_get_type"
               glib:type-struct="MessageInterface">
      <doc xml:space="preserve"
           filename="talkatu/talkatumessage.c"
           line="24">Talkatu needs a way to represent a message in a client agnostic way, this is
the API that does that.</doc>
      <source-position filename="talkatu/talkatumessage.h" line="59"/>
      <virtual-method name="add_attachment" invoker="add_attachment">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="420">Adds @attachment to @message.

Returns %TRUE if an attachment with the same ID did not already exist.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="422">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="423">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="clear_attachments" invoker="clear_attachments">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="518">Removes all attachments from @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="520">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="foreach_attachment" invoker="foreach_attachment">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="494">Calls @func for each #TalkatuAttachment that's attached to @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="496">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="497">The #TalkatuAttachmentForeachFunc to call.</doc>
            <type name="AttachmentForeachFunc"
                  c:type="TalkatuAttachmentForeachFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="498">User data to pass to @func.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_attachment" invoker="get_attachment">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="470">Retrieves the #TalkatuAttachment identified by @id from @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="477">The #TalkatuAttachment if it was found, otherwise
                          %NULL.</doc>
          <type name="Attachment" c:type="TalkatuAttachment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="472">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="473">The id of the #TalkatuAttachment to get.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_attachment" invoker="remove_attachment">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="446">Removes the #TalkatuAttachment identified by @id if it exists.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="453">%TRUE if the #TalkatuAttachment was found and removed, %FALSE
         otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="448">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="449">The id of the #TalkatuAttachment</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_attachment"
              c:identifier="talkatu_message_add_attachment">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="420">Adds @attachment to @message.

Returns %TRUE if an attachment with the same ID did not already exist.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="422">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="423">The #TalkatuAttachment instance.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_attachments"
              c:identifier="talkatu_message_clear_attachments">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="518">Removes all attachments from @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="520">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="foreach_attachment"
              c:identifier="talkatu_message_foreach_attachment">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="494">Calls @func for each #TalkatuAttachment that's attached to @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="496">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="497">The #TalkatuAttachmentForeachFunc to call.</doc>
            <type name="AttachmentForeachFunc"
                  c:type="TalkatuAttachmentForeachFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="498">User data to pass to @func.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attachment"
              c:identifier="talkatu_message_get_attachment">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="470">Retrieves the #TalkatuAttachment identified by @id from @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="84"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="477">The #TalkatuAttachment if it was found, otherwise
                          %NULL.</doc>
          <type name="Attachment" c:type="TalkatuAttachment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="472">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="473">The id of the #TalkatuAttachment to get.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_author" c:identifier="talkatu_message_get_author">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="285">Gets the author of @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="291">The author of @message.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="287">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_author_name_color"
              c:identifier="talkatu_message_get_author_name_color">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="318">Gets a #GdkRGBA that the author's name will be rendered with or %NULL if no
color is set.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="325">The #GdkRGBA to renderer the author's name with if
         set, otherwise %NULL.</doc>
          <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="320">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content_type"
              c:identifier="talkatu_message_get_content_type">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="250">Gets the content-type of @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="256">The content type of @message.</doc>
          <type name="ContentType" c:type="TalkatuContentType"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="252">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_contents" c:identifier="talkatu_message_get_contents">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="354">Gets the contents of @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="360">The contents of @message.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="356">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_edited" c:identifier="talkatu_message_get_edited">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="387">Gets whether @message has been edited by its author.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="393">%TRUE if @message was edited by its author, or %FALSE if not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="389">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id" c:identifier="talkatu_message_get_id">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="180">Gets the identifier of the @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="186">The identifier of @message.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="182">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp"
              c:identifier="talkatu_message_get_timestamp">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="213">Gets the timestamp for when this message was created.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="64"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="219">The timestamp of @message.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="215">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_attachment"
              c:identifier="talkatu_message_remove_attachment">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="446">Removes the #TalkatuAttachment identified by @id if it exists.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessage.c"
               line="453">%TRUE if the #TalkatuAttachment was found and removed, %FALSE
         otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="448">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="449">The id of the #TalkatuAttachment</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_author" c:identifier="talkatu_message_set_author">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="304">Sets the author of @message to @author.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="306">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="author" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="307">The new author of @message.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_author_name_color"
              c:identifier="talkatu_message_set_author_name_color">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="339">Sets the color for the name of the author of @message to @color. Calling
this with @color set to %NULL will unset a previously set color.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="341">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="342">The new color for the author's name.</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_type"
              c:identifier="talkatu_message_set_content_type">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="269">Sets the content type of @message to @content_type.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="271">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="content_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="272">The new #TalkatuContentType to set.</doc>
            <type name="ContentType" c:type="TalkatuContentType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_contents" c:identifier="talkatu_message_set_contents">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="373">Sets the contents of @message to @contents.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="375">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="contents" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="376">The new contents of @message.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_edited" c:identifier="talkatu_message_set_edited">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="406">Sets whether @message has been edited or not.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="408">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="edited" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="409">Whether the message has been edited or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id" c:identifier="talkatu_message_set_id">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="199">Sets the identifier of @message.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="201">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="202">The new identifier of @message.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timestamp"
              c:identifier="talkatu_message_set_timestamp">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessage.c"
             line="236">Sets the creation timestamp for @message to @timestamp.</doc>
        <source-position filename="talkatu/talkatumessage.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="238">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </instance-parameter>
          <parameter name="timestamp"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="239">The new timestamp for @message.</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
        </parameters>
      </method>
      <property name="author"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="author-name-color"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="Gdk.RGBA"/>
      </property>
      <property name="content-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="ContentType"/>
      </property>
      <property name="contents"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="edited"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="id" writable="1" construct="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="timestamp"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GLib.DateTime"/>
      </property>
    </interface>
    <class name="MessageActions"
           c:symbol-prefix="message_actions"
           c:type="TalkatuMessageActions"
           parent="Gtk.Box"
           glib:type-name="TalkatuMessageActions"
           glib:get-type="talkatu_message_actions_get_type"
           glib:type-struct="MessageActionsClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatumessageactions.c"
           line="23">Talkatu provides a simple formatting message_actions that gives the user the ability
to format any #TalkatuBuffer via the formatting actions.</doc>
      <source-position filename="talkatu/talkatumessageactions.h" line="37"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="talkatu_message_actions_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessageactions.c"
             line="155">Creates a new #TalkatuMessageActions that provides the user with an interface to
control the formatting of a #TalkatuBuffer.</doc>
        <source-position filename="talkatu/talkatumessageactions.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessageactions.c"
               line="162">The new #TalkatuMessageActions instance.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessageactions.c"
                 line="157">The #TalkatuMessage instance.</doc>
            <type name="Message" c:type="TalkatuMessage*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_message"
              c:identifier="talkatu_message_actions_get_message">
        <doc xml:space="preserve"
             filename="talkatu/talkatumessageactions.c"
             line="173">Gets the #TalkatuMessage associated with @message_action.</doc>
        <source-position filename="talkatu/talkatumessageactions.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumessageactions.c"
               line="179">The #TalkatuMessage associated with @message_action.</doc>
          <type name="Message" c:type="TalkatuMessage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="message_actions" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessageactions.c"
                 line="175">The #TalkatuMessageActions instance.</doc>
            <type name="MessageActions" c:type="TalkatuMessageActions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="message"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GObject.Object"/>
      </property>
    </class>
    <record name="MessageActionsClass"
            c:type="TalkatuMessageActionsClass"
            glib:is-gtype-struct-for="MessageActions">
      <source-position filename="talkatu/talkatumessageactions.h" line="37"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <record name="MessageInterface"
            c:type="TalkatuMessageInterface"
            glib:is-gtype-struct-for="Message">
      <doc xml:space="preserve"
           filename="talkatu/talkatumessage.c"
           line="46">#TalkatuMessage is an interface to be implemented that standardizes the way
messages are handled.  All of its properties should be overridden with a
sensible value returned for them.

It also needs to implement a storage mechanism for attachments which are
identified by a #guint64.</doc>
      <source-position filename="talkatu/talkatumessage.h" line="59"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="add_attachment">
        <callback name="add_attachment">
          <source-position filename="talkatu/talkatumessage.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumessage.c"
                   line="422">The #TalkatuMessage instance.</doc>
              <type name="Message" c:type="TalkatuMessage*"/>
            </parameter>
            <parameter name="attachment" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumessage.c"
                   line="423">The #TalkatuAttachment instance.</doc>
              <type name="Attachment" c:type="TalkatuAttachment*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_attachment">
        <callback name="remove_attachment">
          <source-position filename="talkatu/talkatumessage.h" line="52"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="453">%TRUE if the #TalkatuAttachment was found and removed, %FALSE
         otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumessage.c"
                   line="448">The #TalkatuMessage instance.</doc>
              <type name="Message" c:type="TalkatuMessage*"/>
            </parameter>
            <parameter name="id" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumessage.c"
                   line="449">The id of the #TalkatuAttachment</doc>
              <type name="guint64" c:type="guint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_attachment">
        <callback name="get_attachment">
          <source-position filename="talkatu/talkatumessage.h" line="53"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="talkatu/talkatumessage.c"
                 line="477">The #TalkatuAttachment if it was found, otherwise
                          %NULL.</doc>
            <type name="Attachment" c:type="TalkatuAttachment*"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumessage.c"
                   line="472">The #TalkatuMessage instance.</doc>
              <type name="Message" c:type="TalkatuMessage*"/>
            </parameter>
            <parameter name="id" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumessage.c"
                   line="473">The id of the #TalkatuAttachment to get.</doc>
              <type name="guint64" c:type="guint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="foreach_attachment">
        <callback name="foreach_attachment">
          <source-position filename="talkatu/talkatumessage.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumessage.c"
                   line="496">The #TalkatuMessage instance.</doc>
              <type name="Message" c:type="TalkatuMessage*"/>
            </parameter>
            <parameter name="func"
                       transfer-ownership="none"
                       scope="call"
                       closure="2">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumessage.c"
                   line="497">The #TalkatuAttachmentForeachFunc to call.</doc>
              <type name="AttachmentForeachFunc"
                    c:type="TalkatuAttachmentForeachFunc"/>
            </parameter>
            <parameter name="data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumessage.c"
                   line="498">User data to pass to @func.</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="clear_attachments">
        <callback name="clear_attachments">
          <source-position filename="talkatu/talkatumessage.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="talkatu/talkatumessage.c"
                   line="520">The #TalkatuMessage instance.</doc>
              <type name="Message" c:type="TalkatuMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="ScrolledWindow"
           c:symbol-prefix="scrolled_window"
           c:type="TalkatuScrolledWindow"
           parent="Gtk.ScrolledWindow"
           glib:type-name="TalkatuScrolledWindow"
           glib:get-type="talkatu_scrolled_window_get_type"
           glib:type-struct="ScrolledWindowClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuscrolledwindow.c"
           line="23">This widget is a simple subclass of #GtkScrolledWindow that has helpers for
keyboard navigation as well as the ability to automatically scroll to the end
when new items are added if the widget was already scrolled all the way to
the bottom.</doc>
      <source-position filename="talkatu/talkatuscrolledwindow.h" line="35"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="talkatu_scrolled_window_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatuscrolledwindow.c"
             line="140">Creates a new #TalkatuScrolledWindow.</doc>
        <source-position filename="talkatu/talkatuscrolledwindow.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuscrolledwindow.c"
               line="147">The new #TalkatuScrolledWindow instance.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="hadjustment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuscrolledwindow.c"
                 line="142">The GtkAdjustment for the horizontal position.</doc>
            <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
          </parameter>
          <parameter name="vadjustment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuscrolledwindow.c"
                 line="143">The GtkAdjustment for the vertical position.</doc>
            <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="page_down"
              c:identifier="talkatu_scrolled_window_page_down">
        <doc xml:space="preserve"
             filename="talkatu/talkatuscrolledwindow.c"
             line="179">Scrolls @sw down one page.</doc>
        <source-position filename="talkatu/talkatuscrolledwindow.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sw" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuscrolledwindow.c"
                 line="181">The #TalkatuScrolledWindow instance.</doc>
            <type name="ScrolledWindow" c:type="TalkatuScrolledWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="page_up" c:identifier="talkatu_scrolled_window_page_up">
        <doc xml:space="preserve"
             filename="talkatu/talkatuscrolledwindow.c"
             line="160">Scrolls @sw up one page.</doc>
        <source-position filename="talkatu/talkatuscrolledwindow.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sw" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuscrolledwindow.c"
                 line="162">The #TalkatuScrolledWindow instance.</doc>
            <type name="ScrolledWindow" c:type="TalkatuScrolledWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="ScrolledWindowClass"
            c:type="TalkatuScrolledWindowClass"
            glib:is-gtype-struct-for="ScrolledWindow">
      <source-position filename="talkatu/talkatuscrolledwindow.h" line="35"/>
      <field name="parent_class">
        <type name="Gtk.ScrolledWindowClass" c:type="GtkScrolledWindowClass"/>
      </field>
    </record>
    <class name="SimpleAttachment"
           c:symbol-prefix="simple_attachment"
           c:type="TalkatuSimpleAttachment"
           parent="GObject.Object"
           glib:type-name="TalkatuSimpleAttachment"
           glib:get-type="talkatu_simple_attachment_get_type"
           glib:type-struct="SimpleAttachmentClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatusimpleattachment.c"
           line="23">#TalkatuSimpleAttachment is simple implementation of the #TalkatuAttachment
interface.  This is the easiest way to create a #TalkatuAttachment and attach
it to a #TalkatuMessage.</doc>
      <source-position filename="talkatu/talkatusimpleattachment.h" line="31"/>
      <implements name="Attachment"/>
      <function name="new" c:identifier="talkatu_simple_attachment_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatusimpleattachment.c"
             line="271">Creates a new attachment with @content_type.</doc>
        <source-position filename="talkatu/talkatusimpleattachment.h"
                         line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatusimpleattachment.c"
               line="278">The new #TalkatuSimpleAttachment.</doc>
          <type name="Attachment" c:type="TalkatuAttachment*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatusimpleattachment.c"
                 line="273">The identifier of the attachment.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="content_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatusimpleattachment.c"
                 line="274">The content type of the attachment.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </class>
    <record name="SimpleAttachmentClass"
            c:type="TalkatuSimpleAttachmentClass"
            glib:is-gtype-struct-for="SimpleAttachment">
      <source-position filename="talkatu/talkatusimpleattachment.h" line="31"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <constant name="TAG_FORMATTING_END"
              value="-end"
              c:type="TALKATU_TAG_FORMATTING_END">
      <doc xml:space="preserve"
           filename="talkatu/talkatutag.c"
           line="86">A constant to be used as a suffix for tags that need formatting applied
after the original tag.</doc>
      <source-position filename="talkatu/talkatutag.h" line="59"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_FORMATTING_START"
              value="-start"
              c:type="TALKATU_TAG_FORMATTING_START">
      <doc xml:space="preserve"
           filename="talkatu/talkatutag.c"
           line="93">A constant to be used as a prefix for tags that need formatting applied
before the original tag.</doc>
      <source-position filename="talkatu/talkatutag.h" line="58"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_PREFIX" value="talkatu:" c:type="TALKATU_TAG_PREFIX">
      <doc xml:space="preserve"
           filename="talkatu/talkatutag.c"
           line="155">The prefix that all Talkatu tags use.</doc>
      <source-position filename="talkatu/talkatutag.h" line="31"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TAG_PREFIX_LEN" value="-1" c:type="TALKATU_TAG_PREFIX_LEN">
      <doc xml:space="preserve"
           filename="talkatu/talkatutag.c"
           line="161">The length of #TALKATU_TAG_PREFIX for easy computation.</doc>
      <source-position filename="talkatu/talkatutag.h" line="32"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Tag"
           c:symbol-prefix="tag"
           c:type="TalkatuTag"
           parent="Gtk.TextTag"
           glib:type-name="TalkatuTag"
           glib:get-type="talkatu_tag_get_type"
           glib:type-struct="TagClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatutag.c"
           line="23">Talkatu deals with a lot of tags which this API tries to make easier.</doc>
      <source-position filename="talkatu/talkatutag.h" line="71"/>
      <constructor name="new"
                   c:identifier="talkatu_tag_new"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="talkatu/talkatutag.c"
             line="290">Creates a new #TalkatuTag to be used for styling text.</doc>
        <source-position filename="talkatu/talkatutag.h" line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatutag.c"
               line="299">The new #TalkatuTag.</doc>
          <type name="Gtk.TextTag" c:type="GtkTextTag*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutag.c"
                 line="292">The name to give the tag.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="first_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutag.c"
                 line="293">The name of the first property to set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutag.c"
                 line="294">The value of the first property followed optionally by more name/value
      pairs, followed by NULL.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <function name="name_for_action_name"
                c:identifier="talkatu_tag_name_for_action_name">
        <doc xml:space="preserve"
             filename="talkatu/talkatutag.c"
             line="321">Gets the tag name that should be used for @action_name.</doc>
        <source-position filename="talkatu/talkatutag.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatutag.c"
               line="327">The tag name to be used for @action_name, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutag.c"
                 line="323">The name of the action to find a tag name for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="name_to_html" c:identifier="talkatu_tag_name_to_html">
        <doc xml:space="preserve"
             filename="talkatu/talkatutag.c"
             line="344">Determines the HTML tag for @tag_name.</doc>
        <source-position filename="talkatu/talkatutag.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatutag.c"
               line="350">The HTML tag if any for @tag_name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="tag_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutag.c"
                 line="346">The name of the tag.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_display" c:identifier="talkatu_tag_get_display">
        <doc xml:space="preserve"
             filename="talkatu/talkatutag.c"
             line="401">Gets the #TalkatuTagDisplay for @tag.</doc>
        <source-position filename="talkatu/talkatutag.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatutag.c"
               line="407">The #TalkatuTagDisplay for @tag.</doc>
          <type name="TagDisplay" c:type="TalkatuTagDisplay"/>
        </return-value>
        <parameters>
          <instance-parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutag.c"
                 line="403">The #TalkatuTag instance.</doc>
            <type name="Tag" c:type="TalkatuTag*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_display" c:identifier="talkatu_tag_set_display">
        <doc xml:space="preserve"
             filename="talkatu/talkatutag.c"
             line="416">Sets the display type for @tag to @display.</doc>
        <source-position filename="talkatu/talkatutag.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutag.c"
                 line="418">The #TalkatuTag instance.</doc>
            <type name="Tag" c:type="TalkatuTag*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutag.c"
                 line="419">The #TalkatuTagDisplay value to set.</doc>
            <type name="TagDisplay" c:type="TalkatuTagDisplay"/>
          </parameter>
        </parameters>
      </method>
      <property name="display"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="TagDisplay"/>
      </property>
    </class>
    <record name="TagClass"
            c:type="TalkatuTagClass"
            glib:is-gtype-struct-for="Tag">
      <source-position filename="talkatu/talkatutag.h" line="71"/>
      <field name="parent_class">
        <type name="Gtk.TextTagClass" c:type="GtkTextTagClass"/>
      </field>
    </record>
    <enumeration name="TagDisplay"
                 glib:type-name="TalkatuTagDisplay"
                 glib:get-type="talkatu_tag_display_get_type"
                 c:type="TalkatuTagDisplay">
      <doc xml:space="preserve"
           filename="talkatu/talkatutag.c"
           line="203">An enum representing how a tag should be rendered.</doc>
      <member name="inline"
              value="0"
              c:identifier="TALKATU_TAG_DISPLAY_INLINE"
              glib:nick="inline">
        <doc xml:space="preserve"
             filename="talkatu/talkatutag.c"
             line="205">The tag should be rendered inline.</doc>
      </member>
      <member name="block"
              value="1"
              c:identifier="TALKATU_TAG_DISPLAY_BLOCK"
              glib:nick="block">
        <doc xml:space="preserve"
             filename="talkatu/talkatutag.c"
             line="206">The tag should be rendered on its own line.</doc>
      </member>
    </enumeration>
    <class name="TagTable"
           c:symbol-prefix="tag_table"
           c:type="TalkatuTagTable"
           parent="Gtk.TextTagTable"
           glib:type-name="TalkatuTagTable"
           glib:get-type="talkatu_tag_table_get_type"
           glib:type-struct="TagTableClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatutagtable.c"
           line="27">Talkatu provides a simple formatting tag_table that gives the user the ability
to format any #TalkatuBuffer via the formatting actions.</doc>
      <source-position filename="talkatu/talkatutagtable.h" line="35"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="talkatu_tag_table_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatutagtable.c"
             line="302">Creates a new #TalkatuTagTable that provides the user with an interface to
control the formatting of a #TalkatuBuffer.</doc>
        <source-position filename="talkatu/talkatutagtable.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatutagtable.c"
               line="308">The new #TalkatuTagTable instance.</doc>
          <type name="Gtk.TextTagTable" c:type="GtkTextTagTable*"/>
        </return-value>
      </constructor>
    </class>
    <record name="TagTableClass"
            c:type="TalkatuTagTableClass"
            glib:is-gtype-struct-for="TagTable">
      <source-position filename="talkatu/talkatutagtable.h" line="35"/>
      <field name="parent_class">
        <type name="Gtk.TextTagTableClass" c:type="GtkTextTagTableClass"/>
      </field>
    </record>
    <class name="ToolDrawer"
           c:symbol-prefix="tool_drawer"
           c:type="TalkatuToolDrawer"
           stability="Unstable"
           parent="Gtk.ToolItem"
           glib:type-name="TalkatuToolDrawer"
           glib:get-type="talkatu_tool_drawer_get_type"
           glib:type-struct="ToolDrawerClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatutooldrawer.c"
           line="24">A #TalkatuToolDrawer is a #GtkToolItem that groups many #GtkToolItems into a
collection that can be collapsed into a single item to eliminate clutter in
the user interface.</doc>
      <source-position filename="talkatu/talkatutooldrawer.h" line="35"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Activatable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="talkatu_tool_drawer_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatutooldrawer.c"
             line="181">Creates a new #TalkatuToolDrawer instance.</doc>
        <source-position filename="talkatu/talkatutooldrawer.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatutooldrawer.c"
               line="188">The new #TalkatuToolDrawer instance.</doc>
          <type name="Gtk.ToolItem" c:type="GtkToolItem*"/>
        </return-value>
        <parameters>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="183">The label to give item.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="184">The name of the icon for this item.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_item" c:identifier="talkatu_tool_drawer_add_item">
        <doc xml:space="preserve"
             filename="talkatu/talkatutooldrawer.c"
             line="200">Adds a new item to @drawer.</doc>
        <source-position filename="talkatu/talkatutooldrawer.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="202">The #TalkatuToolDrawer instance.</doc>
            <type name="ToolDrawer" c:type="TalkatuToolDrawer*"/>
          </instance-parameter>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="203">The #GAction to add.</doc>
            <type name="Gio.Action" c:type="GAction*"/>
          </parameter>
          <parameter name="markup" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="204">Pango markup to use as a label.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="205">The name of the icon to display.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="tooltip" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="206">UTF-8 text to display as a tooltip.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="207">The callback to call when the item is
                             activated.</doc>
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_separator"
              c:identifier="talkatu_tool_drawer_add_separator">
        <doc xml:space="preserve"
             filename="talkatu/talkatutooldrawer.c"
             line="251">Adds a separator to the end of @drawer.</doc>
        <source-position filename="talkatu/talkatutooldrawer.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="253">The #TalkatuToolDrawer instance.</doc>
            <type name="ToolDrawer" c:type="TalkatuToolDrawer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_expanded"
              c:identifier="talkatu_tool_drawer_get_expanded">
        <doc xml:space="preserve"
             filename="talkatu/talkatutooldrawer.c"
             line="360">Gets whether or not @drawer is expanded.</doc>
        <source-position filename="talkatu/talkatutooldrawer.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatutooldrawer.c"
               line="366">%TRUE if @drawer is expanded, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="362">The #TalkatuToolDrawer instance.</doc>
            <type name="ToolDrawer" c:type="TalkatuToolDrawer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="talkatu_tool_drawer_get_icon_name">
        <doc xml:space="preserve"
             filename="talkatu/talkatutooldrawer.c"
             line="299">Gets the icon name for @drawer.</doc>
        <source-position filename="talkatu/talkatutooldrawer.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatutooldrawer.c"
               line="305">The icon name for @drawer.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="301">The #TalkatuToolDrawer instance.</doc>
            <type name="ToolDrawer" c:type="TalkatuToolDrawer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label" c:identifier="talkatu_tool_drawer_get_label">
        <doc xml:space="preserve"
             filename="talkatu/talkatutooldrawer.c"
             line="266">Gets the label that's displayed when @drawer is collapsed.</doc>
        <source-position filename="talkatu/talkatutooldrawer.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatutooldrawer.c"
               line="272">The label to use when @drawer is collapsed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="268">The #TalkatuToolDrawer instance.</doc>
            <type name="ToolDrawer" c:type="TalkatuToolDrawer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_expanded"
              c:identifier="talkatu_tool_drawer_set_expanded">
        <doc xml:space="preserve"
             filename="talkatu/talkatutooldrawer.c"
             line="332">Sets whether or not @drawer is expanded.</doc>
        <source-position filename="talkatu/talkatutooldrawer.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="334">The #TalkatuToolDrawer instance.</doc>
            <type name="ToolDrawer" c:type="TalkatuToolDrawer*"/>
          </instance-parameter>
          <parameter name="expanded" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="335">%TRUE to expand @drawer, %FALSE to collapse.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="talkatu_tool_drawer_set_icon_name">
        <doc xml:space="preserve"
             filename="talkatu/talkatutooldrawer.c"
             line="314">Sets the name of the icon to be displayed when @drawer is collapsed.</doc>
        <source-position filename="talkatu/talkatutooldrawer.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="316">The #TalkatuToolDrawer instance.</doc>
            <type name="ToolDrawer" c:type="TalkatuToolDrawer*"/>
          </instance-parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="317">The name of the icon to display when collapse.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label" c:identifier="talkatu_tool_drawer_set_label">
        <doc xml:space="preserve"
             filename="talkatu/talkatutooldrawer.c"
             line="281">Sets the label to be displayed when @drawer is collapsed.</doc>
        <source-position filename="talkatu/talkatutooldrawer.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="drawer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="283">The #TalkatuToolDrawer instance.</doc>
            <type name="ToolDrawer" c:type="TalkatuToolDrawer*"/>
          </instance-parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutooldrawer.c"
                 line="284">The label to use when @drawer is collapsed.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="expanded"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="icon-name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="label"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="ToolDrawerClass"
            c:type="TalkatuToolDrawerClass"
            glib:is-gtype-struct-for="ToolDrawer">
      <source-position filename="talkatu/talkatutooldrawer.h" line="35"/>
      <field name="parent_class">
        <type name="Gtk.ToolItemClass" c:type="GtkToolItemClass"/>
      </field>
    </record>
    <class name="Toolbar"
           c:symbol-prefix="toolbar"
           c:type="TalkatuToolbar"
           parent="Gtk.Toolbar"
           glib:type-name="TalkatuToolbar"
           glib:get-type="talkatu_toolbar_get_type"
           glib:type-struct="ToolbarClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatutoolbar.c"
           line="23">Talkatu provides a simple formatting toolbar that gives the user the ability
to format any #TalkatuBuffer via the formatting actions.</doc>
      <source-position filename="talkatu/talkatutoolbar.h" line="35"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <implements name="Gtk.ToolShell"/>
      <constructor name="new" c:identifier="talkatu_toolbar_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatutoolbar.c"
             line="71">Creates a new #TalkatuToolbar that provides the user with an interface to
control the formatting of a #TalkatuBuffer.</doc>
        <source-position filename="talkatu/talkatutoolbar.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatutoolbar.c"
               line="77">The new #TalkatuToolbar instance.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
    </class>
    <record name="ToolbarClass"
            c:type="TalkatuToolbarClass"
            glib:is-gtype-struct-for="Toolbar">
      <source-position filename="talkatu/talkatutoolbar.h" line="35"/>
      <field name="parent_class">
        <type name="Gtk.ToolbarClass" c:type="GtkToolbarClass"/>
      </field>
    </record>
    <class name="TypingLabel"
           c:symbol-prefix="typing_label"
           c:type="TalkatuTypingLabel"
           parent="Gtk.Label"
           glib:type-name="TalkatuTypingLabel"
           glib:get-type="talkatu_typing_label_get_type"
           glib:type-struct="TypingLabelClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatutypinglabel.c"
           line="26">This widget implements a simple interface for displaying who is currently
typing.  You can call talkatu_typing_label_start_typing() whenever you
receive a typing notification and #TalkatuTypingLabel will aggregate it for
you.

If there are no new calls to talkatu_typing_label_start_typing() for a
specific user, then they will be removed after a timeout of 30 seconds.

Usernames are passed in as strings and their default display can be
overridden by connecting to the #TalkatuTypingLabel::changed signal.</doc>
      <source-position filename="talkatu/talkatutypinglabel.h" line="45"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="talkatu_typing_label_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatutypinglabel.c"
             line="209">Creates a new #TalkatuTypingLabel that displays who is typing.</doc>
        <source-position filename="talkatu/talkatutypinglabel.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatutypinglabel.c"
               line="214">The new #TalkatuTypingLabel instance.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="changed" introspectable="0">
        <source-position filename="talkatu/talkatutypinglabel.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <type name="TypingLabel" c:type="TalkatuTypingLabel*"/>
          </instance-parameter>
          <parameter name="typers" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="finish_typing"
              c:identifier="talkatu_typing_label_finish_typing">
        <doc xml:space="preserve"
             filename="talkatu/talkatutypinglabel.c"
             line="267">Removes @who from the list of users in @label that are currently typing.</doc>
        <source-position filename="talkatu/talkatutypinglabel.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutypinglabel.c"
                 line="269">The #TalkatuTypingLabel instance.</doc>
            <type name="TypingLabel" c:type="TalkatuTypingLabel*"/>
          </instance-parameter>
          <parameter name="who" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutypinglabel.c"
                 line="270">The caller defined user that has finished typing.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_typing"
              c:identifier="talkatu_typing_label_start_typing">
        <doc xml:space="preserve"
             filename="talkatu/talkatutypinglabel.c"
             line="223">Adds @who to the list of users in @label that are currently typing.</doc>
        <source-position filename="talkatu/talkatutypinglabel.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutypinglabel.c"
                 line="225">The #TalkatuTypingLabel instance.</doc>
            <type name="TypingLabel" c:type="TalkatuTypingLabel*"/>
          </instance-parameter>
          <parameter name="who" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutypinglabel.c"
                 line="226">The caller defined user that started typing.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Label" c:type="GtkLabel"/>
      </field>
      <glib:signal name="changed" when="last" action="1">
        <doc xml:space="preserve"
             filename="talkatu/talkatutypinglabel.c"
             line="183">Emitted when the typing state of an individual has changed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="talkatu/talkatutypinglabel.c"
                 line="186">A #GList of who's typing.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TypingLabelClass"
            c:type="TalkatuTypingLabelClass"
            glib:is-gtype-struct-for="TypingLabel">
      <doc xml:space="preserve"
           filename="talkatu/talkatutypinglabel.c"
           line="60">The backing class to a #TalkatuTypingLabel.</doc>
      <source-position filename="talkatu/talkatutypinglabel.h" line="45"/>
      <field name="parent" readable="0" private="1">
        <type name="Gtk.LabelClass" c:type="GtkLabelClass"/>
      </field>
      <field name="changed" introspectable="0">
        <callback name="changed" introspectable="0">
          <source-position filename="talkatu/talkatutypinglabel.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="label" transfer-ownership="none">
              <type name="TypingLabel" c:type="TalkatuTypingLabel*"/>
            </parameter>
            <parameter name="typers" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*">
                <type name="gpointer" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <constant name="VERSION" value="0.1.0-dev" c:type="TALKATU_VERSION">
      <doc xml:space="preserve"
           filename="talkatu/talkatuversion.h"
           line="62">The full version of Talkatu that's being compiled against as a string.</doc>
      <source-position filename="talkatu/talkatuversion.h" line="67"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VERSION_CHECK"
                    c:identifier="TALKATU_VERSION_CHECK"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="talkatu/talkatuversion.h"
           line="69">A simple macro that will return true if the version of Talkatu that's being
compiled against is newer than the provided version.</doc>
      <source-position filename="talkatu/talkatuversion.h" line="78"/>
      <parameters>
        <parameter name="major">
          <doc xml:space="preserve"
               filename="talkatu/talkatuversion.h"
               line="71">The major version to check which must match.</doc>
        </parameter>
        <parameter name="minor">
          <doc xml:space="preserve"
               filename="talkatu/talkatuversion.h"
               line="72">The minimum minor version to check.</doc>
        </parameter>
        <parameter name="micro">
          <doc xml:space="preserve"
               filename="talkatu/talkatuversion.h"
               line="73">The minimum micro version to check.</doc>
        </parameter>
      </parameters>
    </function-macro>
    <class name="View"
           c:symbol-prefix="view"
           c:type="TalkatuView"
           parent="Gtk.TextView"
           glib:type-name="TalkatuView"
           glib:get-type="talkatu_view_get_type"
           glib:type-struct="ViewClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuview.c"
           line="33">#TalkatuView handles the display of a #TalkatuBuffer, the keybindings for
applying formats, as well as displaying links.</doc>
      <source-position filename="talkatu/talkatuview.h" line="48"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="talkatu_view_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatuview.c"
             line="461">Creates a new #TalkatuView with a #TalkatuBuffer.</doc>
        <source-position filename="talkatu/talkatuview.h" line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuview.c"
               line="466">The new #TalkatuView.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_buffer"
                   c:identifier="talkatu_view_new_with_buffer">
        <doc xml:space="preserve"
             filename="talkatu/talkatuview.c"
             line="472">Creates a new #TalkatuView with @buffer.</doc>
        <source-position filename="talkatu/talkatuview.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuview.c"
               line="478">The new #TalkatuView.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuview.c"
                 line="474">A #GtkTextBuffer.</doc>
            <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="format_activate">
        <source-position filename="talkatu/talkatuview.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="View" c:type="TalkatuView*"/>
          </instance-parameter>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open_url">
        <source-position filename="talkatu/talkatuview.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="View" c:type="TalkatuView*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <field name="parent_instance">
        <type name="Gtk.TextView" c:type="GtkTextView"/>
      </field>
      <glib:signal name="format-activate" when="last" action="1">
        <doc xml:space="preserve"
             filename="talkatu/talkatuview.c"
             line="397">Emitted by the keybindings to apply a format to the underlying buffer.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuview.c"
                 line="400">The name of the action to activated.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="open-url" when="last" action="1">
        <doc xml:space="preserve"
             filename="talkatu/talkatuview.c"
             line="418">Emitted when a user clicks on a link to open the url</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="talkatu/talkatuview.c"
                 line="421">The URL to open.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ViewClass"
            c:type="TalkatuViewClass"
            glib:is-gtype-struct-for="View">
      <doc xml:space="preserve"
           filename="talkatu/talkatuview.c"
           line="48">The backing class to #TalkatuView instances.</doc>
      <source-position filename="talkatu/talkatuview.h" line="48"/>
      <field name="parent" readable="0" private="1">
        <type name="Gtk.TextViewClass" c:type="GtkTextViewClass"/>
      </field>
      <field name="format_activate">
        <callback name="format_activate">
          <source-position filename="talkatu/talkatuview.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="TalkatuView*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_url">
        <callback name="open_url">
          <source-position filename="talkatu/talkatuview.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="TalkatuView*"/>
            </parameter>
            <parameter name="url" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="WholeBuffer"
           c:symbol-prefix="whole_buffer"
           c:type="TalkatuWholeBuffer"
           parent="Buffer"
           glib:type-name="TalkatuWholeBuffer"
           glib:get-type="talkatu_whole_buffer_get_type"
           glib:type-struct="WholeBufferClass">
      <doc xml:space="preserve"
           filename="talkatu/talkatuwholebuffer.c"
           line="24">TalkatuWholeBuffer is a #GtkTextBuffer who's formatting applied to the
entire buffer and not on a character by character basis.</doc>
      <source-position filename="talkatu/talkatuwholebuffer.h" line="37"/>
      <constructor name="new" c:identifier="talkatu_whole_buffer_new">
        <doc xml:space="preserve"
             filename="talkatu/talkatuwholebuffer.c"
             line="109">Creates a new #TalkatuWholeBuffer that applies formatting across the whole
text buffer instead of just a subset.</doc>
        <source-position filename="talkatu/talkatuwholebuffer.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="talkatu/talkatuwholebuffer.c"
               line="115">The new #TalkatuWholeBuffer instance.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </return-value>
      </constructor>
    </class>
    <record name="WholeBufferClass"
            c:type="TalkatuWholeBufferClass"
            glib:is-gtype-struct-for="WholeBuffer">
      <source-position filename="talkatu/talkatuwholebuffer.h" line="37"/>
      <field name="parent_class">
        <type name="BufferClass" c:type="TalkatuBufferClass"/>
      </field>
    </record>
    <function name="action_name_for_tag_name"
              c:identifier="talkatu_action_name_for_tag_name">
      <doc xml:space="preserve"
           filename="talkatu/talkatuactiongroup.c"
           line="804">Looks up a #GAction for the the tag named @tag_name.</doc>
      <source-position filename="talkatu/talkatuactiongroup.h" line="69"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="talkatu/talkatuactiongroup.c"
             line="810">The #GAction if one is found, otherwise %NULL.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="tag_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatuactiongroup.c"
               line="806">The name of the tag to lookup.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="codeset_coerce_utf8"
              c:identifier="talkatu_codeset_coerce_utf8"
              throws="1">
      <doc xml:space="preserve"
           filename="talkatu/talkatucodeset.c"
           line="34">Attempts to coerce the raw @data into UTF-8.

Currently it handles UTF-8, UTF-16 (host encoding), UTF-16 littled endian,
and UTF-16 big endian.</doc>
      <source-position filename="talkatu/talkatucodeset.h" line="31"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="talkatu/talkatucodeset.c"
             line="46">The coerced @data as UTF-8, or #NULL with @error
         set on error.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatucodeset.c"
               line="36">The raw data to coerce.</doc>
          <type name="guint8" c:type="const guint8*"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatucodeset.c"
               line="37">The length of the raw data in bytes.</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="text_length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatucodeset.c"
               line="38">A return address for the length of the coerced text.</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="init" c:identifier="talkatu_init">
      <doc xml:space="preserve"
           filename="talkatu/talkatucore.c"
           line="35">Initializes Talkatu.  This should be called before using any other Talkatu
API.</doc>
      <source-position filename="talkatu/talkatucore.h" line="28"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="markup_append_html"
              c:identifier="talkatu_markup_append_html">
      <doc xml:space="preserve"
           filename="talkatu/talkatumarkup.c"
           line="342">Appends @text to @buffer at the current insertion point of @buffer.</doc>
      <source-position filename="talkatu/talkatumarkup.h" line="34"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="344">The #TalkatuBuffer instance.</doc>
          <type name="Buffer" c:type="TalkatuBuffer*"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="345">The text to append.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="346">The len of @text.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="markup_deserialize_html"
              c:identifier="talkatu_markup_deserialize_html"
              throws="1">
      <doc xml:space="preserve"
           filename="talkatu/talkatumarkup.c"
           line="289">This is a #GtkTextBufferDeserializeFunc function that will deserialize
HTML data from @data into @content_buffer.  It should be registered with
with #gtk_text_buffer_register_deserializer_format in the buffer's
instance_init function.</doc>
      <source-position filename="talkatu/talkatumarkup.h" line="33"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="talkatu/talkatumarkup.c"
             line="305">TRUE on success, or FALSE on error with @error set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="register_buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="291">The #GtkTextBuffer the format is registered with.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </parameter>
        <parameter name="content_buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="292">The #GtkTextBuffer to deserialize into.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </parameter>
        <parameter name="iter" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="293">Insertion point for the deserialized text.</doc>
          <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="294">The data to deserialize.</doc>
          <type name="guint8" c:type="const guint8*"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="295">The length of @data.</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="create_tags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="296">TRUE if deserializing may create tags</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="297">User data that was specified when registering the format.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="markup_get_html" c:identifier="talkatu_markup_get_html">
      <doc xml:space="preserve"
           filename="talkatu/talkatumarkup.c"
           line="571">Extracts all text from @buffer as an HTML string.</doc>
      <source-position filename="talkatu/talkatumarkup.h" line="39"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="talkatu/talkatumarkup.c"
             line="578">The extracted HTML string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="573">The #GtkTextBuffer instance.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="574">A return address for the length of text extracted.</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="markup_get_html_range"
              c:identifier="talkatu_markup_get_html_range">
      <doc xml:space="preserve"
           filename="talkatu/talkatumarkup.c"
           line="417">Extracts a section of @buffer into an HTML string.</doc>
      <source-position filename="talkatu/talkatumarkup.h" line="40"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="talkatu/talkatumarkup.c"
             line="426">The HTML string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="419">The #GtkTextBuffer instance.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </parameter>
        <parameter name="start" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="420">The starting point to get.</doc>
          <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
        </parameter>
        <parameter name="end" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="421">The ending point to get.</doc>
          <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="422">A return address for the length of text extracted.</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="markup_insert_html"
              c:identifier="talkatu_markup_insert_html">
      <doc xml:space="preserve"
           filename="talkatu/talkatumarkup.c"
           line="361">Inserts @text in @buffer at @iter.</doc>
      <source-position filename="talkatu/talkatumarkup.h" line="35"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="363">The #TalkatuBuffer instance.</doc>
          <type name="Buffer" c:type="TalkatuBuffer*"/>
        </parameter>
        <parameter name="iter" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="364">The insertion point for the deserialized text.</doc>
          <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="365">The text to insert.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="366">The length of @text.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="markup_serialize_html"
              c:identifier="talkatu_markup_serialize_html">
      <doc xml:space="preserve"
           filename="talkatu/talkatumarkup.c"
           line="541">This is a #GtkTextBufferSerializeFunc that should be registered with
#gtk_text_buffer_register_serialize_func in the buffer's instance_init
method.</doc>
      <source-position filename="talkatu/talkatumarkup.h" line="38"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="talkatu/talkatumarkup.c"
             line="554">The serialized HTML data.</doc>
        <type name="guint8" c:type="guint8*"/>
      </return-value>
      <parameters>
        <parameter name="register_buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="543">The #GtkTextBuffer for which the format is registered.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </parameter>
        <parameter name="content_buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="544">The #GtkTextBuffer to serialize.</doc>
          <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
        </parameter>
        <parameter name="start" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="545">Start of the block of text to serialize.</doc>
          <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
        </parameter>
        <parameter name="end" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="546">End of the block of text to serialize.</doc>
          <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="547">Return location for the length of the serialized data.</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="548">User data that was specified when registering the format.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="markup_set_html" c:identifier="talkatu_markup_set_html">
      <doc xml:space="preserve"
           filename="talkatu/talkatumarkup.c"
           line="400">Replaces all text in @buffer with @text.</doc>
      <source-position filename="talkatu/talkatumarkup.h" line="36"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="402">A #TalkatuBuffer instance</doc>
          <type name="Buffer" c:type="TalkatuBuffer*"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="403">The HTML text to set.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="talkatu/talkatumarkup.c"
               line="404">The length of @text, or -1.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="uninit" c:identifier="talkatu_uninit">
      <doc xml:space="preserve"
           filename="talkatu/talkatucore.c"
           line="47">Cleanly shutdown the Talkatu API.</doc>
      <source-position filename="talkatu/talkatucore.h" line="29"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
  </namespace>
</repository>
